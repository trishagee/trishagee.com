<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Tools on Trisha Gee </title>
    <link>http://trishagee.github.io/tags/tools/index.xml</link>
    <language>en-us</language>
    <author>Trisha Gee</author>
    <rights>Copyright (c) 2011 - 2014, Trisha Gee; all rights reserved.</rights>
    <updated>Tue, 18 Jan 2011 00:00:00 UTC</updated>
    
    <item>
      <title>FogBugs and Kiln World Tour</title>
      <link>http://trishagee.github.io/post/fogbugs_and_kiln_world_tour</link>
      <pubDate>Tue, 18 Jan 2011 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>http://trishagee.github.io/post/fogbugs_and_kiln_world_tour</guid>
      <description>&lt;p&gt;Last Thursday I was fortunate enough to get a place on the &lt;a href=&#34;http://worldtour.fogcreek.com/&#34;&gt;FogBugz and Kiln World Tour&lt;/a&gt;. &amp;nbsp;I booked it before I moved jobs, and I&amp;rsquo;ll be honest I had no real interest in the software. &amp;nbsp;I&amp;rsquo;ve been reading Joel&amp;rsquo;s books and blogs since my friend Brent bought me &lt;a href=&#34;http://www.amazon.co.uk/gp/product/1590593898&#34;&gt;Joel on Software&lt;/a&gt;&amp;nbsp;and made me read it (he had the foresight to know I&amp;rsquo;d want to hang on to his copy if he&amp;rsquo;d lent it to me!). &amp;nbsp;I wanted to see the man in the flesh and hear what he had to say about his software. &amp;nbsp;Because really, do we honestly need yet another bug-tracking / project-management tool?&lt;br /&gt;&lt;br /&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;Who would benefit from FogBugz?&lt;/span&gt;&lt;br /&gt;&lt;a href=&#34;http://www.joelonsoftware.com/AboutMe.html&#34;&gt;Joel&lt;/a&gt;&amp;rsquo;s demo was really good at demonstrating exactly how you might use the software - the processes you might follow, how to raise / update a ticket and chase it, and how you can see what&amp;rsquo;s going on with the projects tracked.&lt;br /&gt;&lt;br /&gt;I can actually think of a number of companies I&amp;rsquo;ve worked for, or friends have worked for, that would see an improvement in productivity from using &lt;a href=&#34;http://www.fogcreek.com/FogBugz/&#34;&gt;FogBugz&lt;/a&gt; for bug tracking / project management. &amp;nbsp;When I worked at Touch Clarity (later swallowed by &lt;a href=&#34;http://www.omniture.com/&#34;&gt;Omniture&lt;/a&gt;, which was gobbled by &lt;a href=&#34;http://www.adobe.com/&#34;&gt;Adobe&lt;/a&gt;) I was desperately looking for a product to help us:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Record defects&lt;/li&gt;&lt;li&gt;Capture new feature requests&lt;/li&gt;&lt;li&gt;Assign tasks to developers&lt;/li&gt;&lt;li&gt;Estimate tasks&lt;/li&gt;&lt;li&gt;Track progress - both at a project level and for individual developers&lt;/li&gt;&lt;li&gt;Provide us with a lightweight process which was easy to follow&lt;/li&gt;&lt;li&gt;Generate reports for management.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;div&gt;From the demo I saw, FogBugz will do everything we wanted at that time. &amp;nbsp;We were using &lt;a href=&#34;http://www.bugzilla.org/&#34;&gt;Bugzilla&lt;/a&gt; back then, and badly. &amp;nbsp;I&amp;rsquo;d also investigated &lt;a href=&#34;http://www.xplanner.org/&#34;&gt;XPlanner&lt;/a&gt;, &lt;a href=&#34;http://www.versionone.com/Product/Product_Planning.asp&#34;&gt;VersionOne&lt;/a&gt;&amp;nbsp;and a bunch of other defect/project management tools, and not really seen anything that did what I wanted (certainly that was cheap enough). &amp;nbsp;But this was back in 2004/5, we were doing a half-hearted version of &lt;a href=&#34;http://www.extremeprogramming.org/&#34;&gt;eXtreme Programming&lt;/a&gt;, and we didn&amp;rsquo;t have a lot of cash to burn. &amp;nbsp;It was hard then to find a lightweight, customisable, inexpensive tool.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The things I saw in FogBugz that I thought would be useful were:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Nice UI - usability of these things is so frequently under-valued.&lt;/li&gt;&lt;li&gt;Really easy to track what&amp;rsquo;s going on with a defect, to add and edit comments etc. &amp;nbsp;I actually liked that the edit feature still tracked versions of the comments, I can see how some organisations would need that audit trail.&lt;/li&gt;&lt;li&gt;Evidence-based scheduling - I liked the way that it uses past information to have a good guess at how accurate an estimate will be, and therefore the soonest, likely and latest times a feature might be delivered by.&lt;/li&gt;&lt;li&gt;Visibility over an individual developer&amp;rsquo;s workload.&lt;/li&gt;&lt;li&gt;Visibility over work at a project-level&lt;/li&gt;&lt;li&gt;Loads of charts/reports to let you slice and dice the stuff you have in there.&lt;/li&gt;&lt;li&gt;Dependency management&lt;/li&gt;&lt;li&gt;Neat integration to source control - yes, I know you can get this for loads of management tools now, it doesn&amp;rsquo;t mean it&amp;rsquo;s not useful. It seemed pretty slick here.&lt;/li&gt;&lt;li&gt;It seemed quick. &amp;nbsp;But then it could have been a locally-running instance with about 3 defects in it.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;/div&gt;The things I thought would not be so useful in a more Agile environment:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Evidence-based scheduling&lt;/li&gt;&lt;li&gt;Visibility over an individual developer&amp;rsquo;s workload.&lt;/li&gt;&lt;li&gt;Lots of the ways the data can be sliced and diced&lt;/li&gt;&lt;li&gt;Dependency management&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;div&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;So, you like it and you don&amp;rsquo;t like it?&lt;/span&gt;&lt;/div&gt;&lt;div&gt;Yeah yeah, I&amp;rsquo;ve gone all multiple-personality again. &amp;nbsp;The stuff I liked about the product would be dead useful for the types of projects that work that way - where you assign work to individual developers who estimate the work; where developers are assigned to specific projects; where stories / features might not be broken down into small, independent tasks. &amp;nbsp;These places might be running waterfall, or some agile-ish process, or no process at all. &amp;nbsp;A tool like this will give them much better visibility over what&amp;rsquo;s going on, over which deadlines won&amp;rsquo;t be met, over who&amp;rsquo;s estimates are flaky and who&amp;rsquo;s are generally reliable.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;However even before I joined &lt;a href=&#34;http://www.thoughtworks.com/&#34;&gt;ThoughtWorks&lt;/a&gt;, before I joined &lt;a href=&#34;http://www.lmaxtrader.co.uk/about-lmax&#34;&gt;LMAX&lt;/a&gt;, I was sold on Agile as a more natural way to run development teams (this is despite having worked with Touch Clarity&amp;rsquo;s sort-of-XP and A Very Large Media Organisation&amp;rsquo;s &lt;a href=&#34;http://bitsnwidgets.com/2008/04/19/DontBeASCRUMBUT.aspx&#34;&gt;ScrumBut&lt;/a&gt;). &amp;nbsp;The problems that some of the features in FogBugz tries to address are similar to the problems that Agile (&lt;a href=&#34;http://www.extremeprogramming.org/rules.html&#34;&gt;XP&lt;/a&gt;/&lt;a href=&#34;http://www.scrumalliance.org/learn_about_scrum&#34;&gt;Scrum&lt;/a&gt;/&lt;a href=&#34;http://availagility.co.uk/2008/10/28/kanban-flow-and-cadence/&#34;&gt;Kanban&lt;/a&gt; or some hybrid of these) is also supposed to address.&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Evidence-based scheduling: I totally agree with getting statistical about this - teams and management should have a good idea how reliable estimates are. &amp;nbsp;But one of the ways to reduce the variation is to have the estimates done by the team. &amp;nbsp;At LMAX, we would have three developers estimate every story. &amp;nbsp;With any luck at least one of those would know enough about it to provide some solid technical guidance on what was involved, but if there wasn&amp;rsquo;t someone in a group of three that had that knowledge, chances were pretty good the team generally were going to be pretty vague on it. &amp;nbsp;Granted, if you&amp;rsquo;re using FogBugz you can enter the team estimate instead of just the individual who is going to implement it and then your evidence-based scheduling will be for team-estimates instead of personal ones. &amp;nbsp;This is totally fine, in fact it&amp;rsquo;s a good thing - I just think we shouldn&amp;rsquo;t use evidence-based scheduling to &amp;ldquo;fix&amp;rdquo; the problem that estimates are just that - an estimate, a guess.&lt;/li&gt;&lt;li&gt;Visibility over a developer&amp;rsquo;s workload: If you&amp;rsquo;re doing pair programming (XP), if the team takes ownership of the implementation of features / stories (Scrum), there&amp;rsquo;s no need to look at how busy an individual developer is. &amp;nbsp;Yes, there are lots of organisations that do allocate work to individuals. &amp;nbsp;In many (most?) Agile-practicing teams, this will not be happening. &amp;nbsp;So really you only need visibility over a team or project level.&lt;/li&gt;&lt;li&gt;Reporting: Ah, I love reporting. &amp;nbsp;I love data, statistics, pretty charts. Maybe I&amp;rsquo;m secretly a project manager. &amp;nbsp;But it&amp;rsquo;s SO easy to get hung up on the stats, on one tiny measurement, rather than the bigger picture - are we getting closer to &amp;ldquo;done&amp;rdquo; or not? &amp;nbsp;I think you should be able to get at all that data, but not get carried away micro-optimising for metrics which may be hiding bigger problems.&lt;/li&gt;&lt;li&gt;Dependency management: another thing that is dead important in some types of teams or organisations. &amp;nbsp;But the last few Agile projects I&amp;rsquo;ve worked on have not tracked hard-link dependencies at all - each story should stand alone, should be estimated on the basis of just doing that piece of work. &amp;nbsp;Yes, this is idealistic, and even in the projects where we did not officially track dependencies, we&amp;rsquo;d have a good idea of a very general order things should be done in (or an idea of the order things could be done in to make life easier). &amp;nbsp;But these things can be fluid, if a specific feature needs to be done now, you shouldn&amp;rsquo;t have to do every single story that might have a tiny piece of functionality this story is dependent on - just tackle this story and everything you need for it. &amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;All of those points could be blog posts in their own right, I know it&amp;rsquo;s taken me years to get my head around the way I personally see Agile. &amp;nbsp;But you get the idea, or maybe you don&amp;rsquo;t - that&amp;rsquo;s fine, maybe you&amp;rsquo;re in exactly the sort of place that could use FogBugz to improve your productivity.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;FogBugz vs Mingle&lt;/span&gt;&lt;/div&gt;&lt;div&gt;I started at &lt;a href=&#34;http://www.thoughtworks.com/&#34;&gt;ThoughtWorks&lt;/a&gt; last week, so I&amp;rsquo;d better mention that &lt;a href=&#34;http://www.thoughtworks-studios.com/&#34;&gt;ThoughtWorks Studios&lt;/a&gt; have a competitor product, &lt;a href=&#34;http://www.thoughtworks-studios.com/mingle-agile-project-management&#34;&gt;Mingle&lt;/a&gt;. &amp;nbsp;I&amp;rsquo;m reasonably well-qualified to talk about it since I&amp;rsquo;ve been using it in anger for the last two years in a maturing agile environment, and&amp;nbsp;I had my Mingle&amp;nbsp;&lt;s&gt;indoctrination&lt;/s&gt;&amp;nbsp;induction last week.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;To me, the main difference is the angle the two products are taking to approach the same problem: how do you provide a tool that&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;is easy and lightweight enough to use that people (particularly developers) will keep it up to date;&lt;/li&gt;&lt;li&gt;tracks just the right amount of data that people have visibility over the state of development (What are we doing? &amp;nbsp;Are we going to hit our deadlines? What are our blockers?)&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;&lt;div&gt;To me, it seems FogBugz is coming from the traditional development model - it might not be anything as formal as waterfall, but it may not be based on short iterations and assumes individuals rather than teams are assigned work. &amp;nbsp;Mingle was developed for the Agile team, e.g. collective responsibility, pair programming, short iterations.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Mingle is highly configurable, and while FogBugz has a number of templates and custom work flows, Mr Spolsky specifically stated at the demo that these really shouldn&amp;rsquo;t be used. &amp;nbsp;That they&amp;rsquo;ve worked hard to find a process that works, and we should all follow that.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So, Mingle embraces the differences between teams/processes and FogBugz specifically discourages it.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I reckon these things are actually also the potential downfalls for both products too: &amp;nbsp;Mingle can be abused so badly that it adds no value; FogBugz could be so prescriptive it slows down productivity.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;But it&amp;rsquo;s horses for courses, every tool has its advantages and disadvantages. &amp;nbsp;Or should I be pushing Mingle at this point until I pass my probation??&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;Kiln, and an introduction to DVCS&lt;/span&gt;&lt;/div&gt;&lt;div&gt;Good Lord, I&amp;rsquo;ve written all that stuff and that&amp;rsquo;s only from the short demo at the start of the day.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Fortunately I have a lot less to say about the latter part. &amp;nbsp;It was an introduction to Distributed Version Control (DVCS), and it was pitched absolutely right for someone like me. &amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I&amp;rsquo;ve never used a DVCS; most recently I&amp;rsquo;ve been using &lt;a href=&#34;http://subversion.tigris.org/&#34;&gt;Subversion&lt;/a&gt;, but I&amp;rsquo;ve also used &lt;a href=&#34;http://pvcs.synergex.com/&#34;&gt;PVCS&lt;/a&gt;, &lt;a href=&#34;http://www-01.ibm.com/software/awdtools/clearcase/&#34;&gt;ClearCase&lt;/a&gt;, &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/aa302175.aspx#vssmap_topic2&#34;&gt;VSS&lt;/a&gt;&amp;nbsp;and a bunch of others (in fact, I&amp;rsquo;m pretty sure I&amp;rsquo;ve had to learn a new source control system every time I&amp;rsquo;ve switched project or company!). &amp;nbsp;I&amp;rsquo;ve been introduced to &lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt;&amp;nbsp;over a lunchtime, and I read Martin Fowler&amp;rsquo;s blog post on &lt;a href=&#34;http://martinfowler.com/bliki/VersionControlTools.html&#34;&gt;version control tools&lt;/a&gt;. &amp;nbsp;The intro provided by FogCreek was spot on for me. &amp;nbsp;It showed me:&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;The differences between a DVCS and something like Subversion (OK, specifically svn, which is fine for me);&lt;/li&gt;&lt;li&gt;Advantages of using a distributed source control system;&lt;/li&gt;&lt;li&gt;Some mindsets that you need to change when switching from svn to a DVCS like &lt;a href=&#34;http://mercurial.selenic.com/&#34;&gt;Mercurial&lt;/a&gt;;&lt;/li&gt;&lt;li&gt;The FogCreek way of setting up the repositories.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;div&gt;The last point was particularly useful in giving some real-life examples of how to use a DVCS and why.&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Then there was some stuff on why &lt;a href=&#34;http://www.fogcreek.com/kiln/&#34;&gt;Kiln&lt;/a&gt; might give you more than just the freebie Mercurial install.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;It was more useful in a general fashion than the FogBugz section. &amp;nbsp;However, like the FogBugz talk, I got a good feel for the types of teams/companies Kiln might be good for, and why you might use it. &amp;nbsp;Personally it convinced me that using a DVCS in general is probably better than Subversion (insert usual disclaimer of different tools being appropriate for different situations). &amp;nbsp;It certainly encourages working practices that will lead to a) less accidental loss of code (after all, that&amp;rsquo;s what source control is for) and b) if well organised, better separation of bugs / features / stories and better integration across versions and branches.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;If you want to know what I&amp;rsquo;ve been blathering on about in this section, check out Joel&amp;rsquo;s &lt;a href=&#34;http://hginit.com/00.html&#34;&gt;excellent introduction to Mercurial&lt;/a&gt;. &amp;nbsp;OK, I admit it, I haven&amp;rsquo;t read it all. &amp;nbsp;But it seems to cover everything that was covered in the conference session, with Joel&amp;rsquo;s usual wit and appeal to the developer mindset.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;In Other News&lt;/span&gt;&lt;/div&gt;&lt;div&gt;In terms of an education session, the &amp;ldquo;World Tour&amp;rdquo; was excellent - succinct, easy to digest, and (to my mind) aimed exactly at the audience.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;However&lt;/i&gt;. &amp;nbsp;I actually ended the (half) day being slightly disappointed, and not just because these tools don&amp;rsquo;t seem to be ideal for the Agile team.&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;I didn&amp;rsquo;t get enough of a chance to network. &amp;nbsp;Now, I&amp;rsquo;m happy to admit this is a problem I regularly have - because, like many developers, I find it difficult to talk to new people in a big room full of people I don&amp;rsquo;t know. &amp;nbsp;However, given that this was a big room full of developers, I wish there had been more of an effort made to help us to mix and network. Before the talks we were on tables in another room having coffee etc, which I liked because it did lead to some conversation in small groups. &amp;nbsp;But I would have been nice if there had been a chance at the end of the talks to chat to people and&amp;nbsp;dissect&amp;nbsp;the session (if there actually was, it was so badly publicised I missed it). &amp;nbsp;I went with a stack of business cards and didn&amp;rsquo;t give a single one out.&lt;/li&gt;&lt;li&gt;The half day didn&amp;rsquo;t seem like enough. &amp;nbsp;But this might be more a reflection of the above point since I got what I wanted from the talks, any more would have been too much info. &amp;nbsp;So maybe I just wanted more time with the attendees and with the FogCreek guys.&lt;/li&gt;&lt;li&gt;I was shocked by how few women there were. &amp;nbsp;I&amp;rsquo;m no tech newbie, I&amp;rsquo;ve been to training sessions, conferences, user groups, seminars, and worked on site at a lot of different types of places. &amp;nbsp;I was very surprised to see that in a room of several hundred people I counted 5 women (myself included). &amp;nbsp;This seems low even for gathering of techies, it seems &lt;i&gt;very&lt;/i&gt; low for a presentation on a piece of software that is effectively project management software. &amp;nbsp;I don&amp;rsquo;t have the stats to hand, but in my personal experience any technical event with even a sniff of project management stuff is better represented across both genders. &amp;nbsp;I wouldn&amp;rsquo;t normally comment on it because it&amp;rsquo;s something I&amp;rsquo;m used to myself, but I&amp;rsquo;ve been asked a bunch of times in the last two weeks &amp;ldquo;what do we need to do to encourage more participation by women?&amp;rdquo;, and I have my eyes open for stuff which might help me answer that.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;div&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;In Conclusion&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;ol&gt;&lt;li&gt;A generally good, well-run event, especially as it was free (if I recall correctly).&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://www.fogcreek.com/fogbugz/&#34;&gt;FogBugz&lt;/a&gt; and &lt;a href=&#34;http://www.fogcreek.com/kiln/&#34;&gt;Kiln&lt;/a&gt; are excellent tools for a certain type of organisation / team, and I&amp;rsquo;m not talking about a small minority of teams here.&lt;/li&gt;&lt;li&gt;If you&amp;rsquo;re Agile, these tools are probably not for you. &amp;nbsp;You can get them to work, and if you&amp;rsquo;re &amp;ldquo;kind of&amp;rdquo; agile they&amp;rsquo;re probably better than a lot of your options. &amp;nbsp;But true agile teams running an effective process might find themselves hindered more than helped.&lt;/li&gt;&lt;li&gt;I&amp;rsquo;m going to download and install a DVCS the very next time I have to write a line of code.&lt;/li&gt;&lt;/ol&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
