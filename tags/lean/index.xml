<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Lean on Trisha Gee </title>
    <link>http://trishagee.github.io/tags/lean/index.xml</link>
    <language>en-us</language>
    <author>Trisha Gee</author>
    <rights>Copyright (c) 2011 - 2014, Trisha Gee; all rights reserved.</rights>
    <updated>Fri, 09 Jul 2010 00:00:00 UTC</updated>
    
    <item>
      <title>Lean Software and Systems Conference 2010 (Bletchley Park)</title>
      <link>http://trishagee.github.io/post/lean_software_and_systems_conference_2010_bletchley_park</link>
      <pubDate>Fri, 09 Jul 2010 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>http://trishagee.github.io/post/lean_software_and_systems_conference_2010_bletchley_park</guid>
      <description>&lt;p&gt;This is just a summary of the points I took from the Lean conference at Bletchley. &amp;nbsp;They all need expanding, this is just the stuff that struck me that I want to record.&lt;div&gt;&lt;br /&gt;&lt;div&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;A Kanban Multiverse – Karl Scotland&lt;/span&gt;&lt;br /&gt;&lt;b&gt;Points from his talk&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Meaning = visualise; interact; persist&lt;/li&gt;&lt;li&gt;Kanban provides the translation between communities&lt;/li&gt;&lt;li&gt;Remove columns from the Kanban board - no more chucking things over the wall to people&lt;/li&gt;&lt;li&gt;Flip charts for design models&lt;/li&gt;&lt;li&gt;Dots on cards for every day in dev, crosses for every day in test&lt;/li&gt;&lt;li&gt;Exploration of UI is part of the card&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Ideas applicable for my project&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Add broken acceptance tests to the Kanban Board?&lt;/li&gt;&lt;li&gt;Start doing task breakdowns again&lt;/li&gt;&lt;li&gt;Add issues and impediments to Kanban board?&lt;/li&gt;&lt;li&gt;Mingle should be updated to reflect the Kanban, at the moment the states are incorrect&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;Converting a Scrum Team to Kanban - Mattias Skarin&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Points from his talk&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Moved from releases per iterations to releases per week&lt;/li&gt;&lt;li&gt;Shifted motivation from delivering at end of iteration towards delivering quality&lt;/li&gt;&lt;li&gt;Establish release cadence and team rhythm&lt;/li&gt;&lt;li&gt;Root cause analysis to find problems and target them&lt;/li&gt;&lt;li&gt;Removed the need for estimates&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Ideas applicable for my project&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Shift to focus on release cadence from iterations?&lt;/li&gt;&lt;/ul&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: small;&#34;&gt;&lt;br /&gt;&lt;/span&gt;Product Development in the Land of the Free&lt;/span&gt;&lt;br /&gt;&lt;b&gt;Points from their talk&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Goal should be to “Delight Customers”&lt;/li&gt;&lt;li&gt;Sitting together decreases waste&lt;/li&gt;&lt;li&gt;Sysadmins belong to the team and rotate&lt;/li&gt;&lt;li&gt;Deliver value fast enough and you don&amp;rsquo;t have to ask for permission&lt;/li&gt;&lt;/ul&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: small;&#34;&gt;&lt;br /&gt;&lt;/span&gt;Learn to Lean: Becoming a Lean Startup – Damon Morgan&lt;/span&gt;&lt;br /&gt;&lt;b&gt;Points from his talk&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Introduce a learning culture: blogs, brown bags, conferences&lt;/li&gt;&lt;li&gt;Scrum introduces a half-day overhead of planning etc.&lt;/li&gt;&lt;li&gt;Scrum implies a handed off release to QA / Ops&lt;/li&gt;&lt;li&gt;Didn&amp;rsquo;t have “QA” but “Developer/Testers” and “Tester/Developers”&lt;/li&gt;&lt;li&gt;Lean = planning on demand.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Not sure when we&amp;rsquo;re supposed to do retrospectives with a pull model?&lt;/li&gt;&lt;li&gt;Definition of Done is not only released to production, but has two&amp;nbsp;possibilities: Generating Value and Not Generating Value&lt;/li&gt;&lt;li&gt;Cards that are “complete” but not released are inventory (and therefore waste)&lt;/li&gt;&lt;li&gt;Need fast smoke tests&lt;/li&gt;&lt;li&gt;Monitoring allows you to reduce errors and see if the release was good. Auto-rollback if not&lt;/li&gt;&lt;li&gt;Releases can be small, feature-specific releases&lt;/li&gt;&lt;li&gt;Have an ideas wall for anyone to contribute&lt;/li&gt;&lt;li&gt;AB Testing very useful to this organisation.&lt;/li&gt;&lt;li&gt;Reduced reliance on estimates&lt;/li&gt;&lt;li&gt;Releases not a big deal – happen daily&lt;/li&gt;&lt;li&gt;Measure outcomes, not activity&lt;/li&gt;&lt;li&gt;Out of 20 ideas, maybe one works. But cost/benefit clear and well understood&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Ideas for us&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Become more release-focussed&lt;/li&gt;&lt;li&gt;Should we encourage developers to do (more) exploratory testing?&lt;/li&gt;&lt;li&gt;Definition of done should be “released”&lt;/li&gt;&lt;li&gt;Better automated monitoring&lt;/li&gt;&lt;/ul&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: small;&#34;&gt;&lt;br /&gt;&lt;/span&gt;Using Kanban to Continuously Improve – Benjamin Mitchel&lt;/span&gt;&lt;br /&gt;&lt;b&gt;Points from his talk&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Quality First&lt;/li&gt;&lt;li&gt;Flow important&lt;/li&gt;&lt;li&gt;“What wasted your time?” to do root cause analysis&lt;/li&gt;&lt;li&gt;Measure time taken to flow through the board&lt;/li&gt;&lt;li&gt;Even if you show people metrics they still don&amp;rsquo;t believe you&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Ideas for us&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Thank goodness we&amp;rsquo;re not a big enterprise organisation&lt;/li&gt;&lt;/ul&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: small;&#34;&gt;&lt;br /&gt;&lt;/span&gt;Behaviour Driven Development – Liz Keogh&lt;/span&gt;&lt;br /&gt;&lt;b&gt;Points from her talk&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;The term BDD and what it means has solidified over time, but it&amp;rsquo;s nothing new&lt;/li&gt;&lt;li&gt;Concentrate on your riskiest tests first&lt;/li&gt;&lt;li&gt;Write your tests starting “should”&lt;/li&gt;&lt;li&gt;Conversations are around behaviour not tests&lt;/li&gt;&lt;li&gt;Development of stories is focussed on learning&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Ideas for us&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;We&amp;rsquo;re pretty good at BDD&lt;/li&gt;&lt;/ul&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: small;&#34;&gt;&lt;br /&gt;&lt;/span&gt;Value Stream Languages – Eric Willeke&lt;/span&gt;&lt;br /&gt;&lt;b&gt;Points from his talk&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Really just a summary of the day / Lean&lt;/li&gt;&lt;li&gt;We should respect different languages&lt;/li&gt;&lt;li&gt;Break things down into what you need to learn, not what you need to do and how long it will take&lt;/li&gt;&lt;li&gt;Variation comes from time it takes to learn, not time it takes to do&lt;/li&gt;&lt;li&gt;Ask “what do we need to know that we don&amp;rsquo;t know now?”&lt;/li&gt;&lt;li&gt;Break milestones down accordingly – High Learning → High Risk → Core Value → High Value&lt;/li&gt;&lt;li&gt;Standup should be phrased “what did we learn yesterday; what do I need to learn today”&lt;/li&gt;&lt;li&gt;When your acceleration of learning decreases it might be time to stop designing and start doing&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Ideas for us&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Maybe a shift in thinking about “learning” instead of “doing”&lt;/li&gt;&lt;/ul&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: large;&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-size: small;&#34;&gt;&lt;br /&gt;&lt;/span&gt;Summary&lt;/span&gt;&lt;br /&gt;&lt;b&gt;Points frequently repeated and/or relevant to my project&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Aim towards no estimation&lt;/li&gt;&lt;li&gt;Not focussing on iterations but on releases&lt;/li&gt;&lt;li&gt;Releases are part of the definition of done&lt;/li&gt;&lt;li&gt;Our BDD and basic Kanban is pretty good&lt;/li&gt;&lt;li&gt;Visibility allows us to find bottlenecks and target them&lt;/li&gt;&lt;li&gt;Focussing on learning might be a path to improvement&lt;/li&gt;&lt;li&gt;Silos are Bad, mmmkay?&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
