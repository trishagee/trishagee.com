<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Process on Trisha Gee </title>
    <link>http://trishagee.github.io/tags/process/index.xml</link>
    <language>en-us</language>
    <author>Trisha Gee</author>
    <rights>Copyright (c) 2011 - 2014, Trisha Gee; all rights reserved.</rights>
    <updated>Mon, 30 Jun 2014 00:00:00 UTC</updated>
    
    <item>
      <title>The Handover</title>
      <link>http://trishagee.github.io/post/the_handover.md</link>
      <pubDate>Mon, 30 Jun 2014 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>http://trishagee.github.io/post/the_handover.md</guid>
      <description>&lt;p&gt;Yesterday I walked into the kitchen to see how lunch was going and my boyfriend handed me a knife,
a part-chopped hard boiled egg and said &amp;ldquo;finish this, I need to have a shower&amp;rdquo;. As you do. Apparently there were two things that needed
doing - &amp;ldquo;this&amp;rdquo; needed finishing, and I needed to keep an eye on the fish.&lt;/p&gt;

&lt;p&gt;Fine.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve &amp;ldquo;paired&amp;rdquo; with him while we&amp;rsquo;ve made that salad before, and I can tell when a fish is burning.  How hard could it be?&lt;/p&gt;

&lt;p&gt;After I finished chopping the egg and putting it into the salad, I realised I didn&amp;rsquo;t know if that was the last thing that needed to go into
the salad - when he said &amp;ldquo;finish this&amp;rdquo;, did he mean the whole salad, or just the egg chopping?&lt;/p&gt;

&lt;p&gt;(This blog post will be vaguely about technology at some point.  Probably.)&lt;/p&gt;

&lt;p&gt;After searching for other eggs that might need to be added, and sifting through the salad to see what was already in there,
I was still unclear about whether it was &amp;ldquo;&lt;a href=&#34;https://www.scrum.org/Resources/Scrum-Glossary/Definition-of-Done&#34;&gt;done&lt;/a&gt;&amp;rdquo; or not, so I
went to bother my boyfriend in the bathroom (this is not a euphemism).&lt;/p&gt;

&lt;p&gt;&amp;ldquo;I told you there were only two things left to do&amp;rdquo; he said - it was so clear to him what the steps were to finish,
that he couldn&amp;rsquo;t understand that there might be hidden assumptions in his handover.  All he wanted was for me to finish chopping the
(only) egg.  Oh and mix it all up. Of course. When I checked if I was supposed to add the olive oil and the salt, the answer was &amp;ldquo;No,
I don&amp;rsquo;t trust you to do that&amp;rdquo; (he&amp;rsquo;s right - I&amp;rsquo;m English, I didn&amp;rsquo;t even know you could put salt in a salad
and certainly have no idea about quantities of olive oil. My Spanish boyfriend is genetically wired to know this stuff).&lt;/p&gt;

&lt;p&gt;Despite the unclear instructions (&amp;ldquo;keep an eye on the fish&amp;rdquo;, if taken literally, could result in me watching it burn - fortunately I knew it
was secret code for &amp;ldquo;remove it from the heat when it&amp;rsquo;s done&amp;rdquo;) we had a very nice lunch.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/static/images/HandoverSalad.JPG&#34; alt=&#34;Salmon &amp;amp; Salad&#34; title=&#34;Salmon and Salad&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;There are parallels between this, and what I was struggling with last week (hurrah, we get to the tenuous analogy!).  I&amp;rsquo;ve been trying
to do my first release for &lt;a href=&#34;https://github.com/mongodb/morphia&#34;&gt;Morphia&lt;/a&gt;, the project I&amp;rsquo;m taking over
for &lt;a href=&#34;http://www.mongodb.org/&#34;&gt;MongoDB&lt;/a&gt;.  I know my colleague was working hard on an automated release script (one click releasing FTW),
and I know he invested a reasonable amount of time in automating the release process (this is code for &amp;ldquo;I had a bad feeling about this&amp;rdquo;).
I was going to be the first to try this out without his machine/settings/user. Yay?&lt;/p&gt;

&lt;p&gt;On Friday night Justin gave me some tips of what was involved, finishing with &amp;ldquo;&amp;hellip;and then &lt;code&gt;.gradlew relase&lt;/code&gt; should just work&amp;rdquo;.  Simples.&lt;/p&gt;

&lt;p&gt;Day One: I struggled with the nexus plugin and permissions.&lt;/p&gt;

&lt;p&gt;Day Two: I woke up with one of those ideas that hit you in the night and fixed that.&lt;/p&gt;

&lt;p&gt;Then I spent two days trying to work out why the Git plugin wouldn&amp;rsquo;t let me log in.&lt;/p&gt;

&lt;p&gt;Eventually I realised that for the whole time I hadn&amp;rsquo;t been using the local version of the
&lt;a href=&#34;https://github.com/evanchooly/github-release-gradle-plugin&#34;&gt;gradle release plugin&lt;/a&gt; like I thought,
but an older version. When I fixed that&amp;hellip; I spent half a day proving I still had the same issue as before.&lt;/p&gt;

&lt;p&gt;Finally, I commented out the code that wasn&amp;rsquo;t working, hard coded a bunch of values and used an old script to upload the Javadoc (don&amp;rsquo;t
get me started on how long it took me to find how &lt;a href=&#34;http://maven.apache.org/&#34;&gt;Maven&lt;/a&gt; was populating the release number,
nor do I want to express the pain I felt at having to install Maven after being in love with &lt;a href=&#34;http://www.gradle.org/&#34;&gt;Gradle&lt;/a&gt; for the
last two years).&lt;/p&gt;

&lt;p&gt;Eventually &lt;a href=&#34;https://github.com/mongodb/morphia/releases/tag/r0.108&#34;&gt;release 0.108 of Morphia&lt;/a&gt; went live on Thursday night - huzzah!&lt;/p&gt;

&lt;p&gt;But of course, as a responsible human being, rather than high-fiving myself, cracking open a bottle of wine and knocking off for the
weekend, next I need to prepare the handover for the next person doing the release. Not least because it&amp;rsquo;s probably going to be me,
and my memory is shocking.  I have two options:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Write a wiki page with the steps needed, manual or automated, including all the local properties that need to be set up as we can&amp;rsquo;t
have some of these passwords floating around on GitHub.&lt;/li&gt;
&lt;li&gt;Fix the automated release so it really is one click / command&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In reality, option 2 still needs documentation because of the local properties that are required.&lt;/p&gt;

&lt;p&gt;What I really want to do is crack open that wine.&lt;/p&gt;

&lt;p&gt;But the moral of the story is: handovers are hard.  And essential.  And worse, often the person doing the handing over is doing so
because they&amp;rsquo;re short on time and, for whatever reason, not responsible for the next phase of the project. Combine this lack of time with
all the assumptions and implicit knowledge in that person&amp;rsquo;s head, and the information being transferred is likely to be&amp;hellip; less than
optimal.&lt;/p&gt;

&lt;p&gt;And the handover receiver is now responsible for something they don&amp;rsquo;t have enough knowledge of and they&amp;rsquo;re not even aware of assumptions or
unknown unknowns. If you&amp;rsquo;re handing over between departments or teams, they might not even have the right tools to find out how to
progress (Ops teams and testers don&amp;rsquo;t always have access to the code, for example, and if they did might not have the context to find it
useful).&lt;/p&gt;

&lt;p&gt;There are tools to help ease the pain of handovers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://martinfowler.com/bliki/PairProgrammingMisconceptions.html&#34;&gt;Pairing&lt;/a&gt;. Pairing might seem expensive (two people at one
keyboard?? How will they type fast enough?), but the savings in handover time (and increase in your &lt;a href=&#34;http://en.wikipedia
.org/wiki/Bus_factor&#34;&gt;Bus Factor&lt;/a&gt;) make it completely worthwhile.  Pairing with The Boy in making salad meant at least I knew what the steps and
ingredients were, I just didn&amp;rsquo;t know what stage we were at. At LMAX, we reduced a lot of our testing backlog by embedding the testers
in the development team, and pairing with them at the start and at the end of the &lt;a href=&#34;http://martinfowler.com/bliki/UserStory.html&#34;&gt;user stories&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If you can&amp;rsquo;t do pairing, code reviews help. I was at least aware of our release plugin as I&amp;rsquo;d seen the original develop in the &lt;a href=&#34;https://github.com/mongodb/mongo-java-driver/&#34;&gt;Java
driver&lt;/a&gt;. If I&amp;rsquo;d been pairing or code reviewing on Morphia,
I would have been even more aware of what the steps were and what changes had been made for that project.&lt;/li&gt;
&lt;li&gt;Finally, if good old fashioned talking isn&amp;rsquo;t your thing, documentation is a good start.  And everyone who uses the docs needs to be
able to update the documentation when they find something wrong, missing, confusing, or just want to annotate it with something useful.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For all of these good practices, really what you want is to remove all possible areas of miscommunication. Computers are logical things,
 so if you can write down an exact list of steps that need to be done in order to achieve something,
you might be able to, I dunno, write that in a script, or something. If you
&lt;a href=&#34;http://www.amazon.com/gp/product/0321601912/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0321601912&amp;linkCode=as2&amp;tag=trissramb-20&amp;linkId=M5DNVR42T66J63VO&#34;&gt;Automate All The Things&lt;/a&gt;&lt;img src=&#34;http://ir-na.amazon-adsystem.com/e/ir?t=trissramb-20&amp;l=as2&amp;o=1&amp;a=0321601912&#34; width=&#34;1&#34; height=&#34;1&#34; border=&#34;0&#34; alt=&#34;&#34; style=&#34;border:none !important; margin:0px !important;&#34; /&gt;, you don&amp;rsquo;t need to have these messy,
complicated conversations with these messy, complicated people.&lt;/p&gt;

&lt;p&gt;But you knew that already.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m off to try and fix my script. I&amp;rsquo;ve even thought of a way to not need local properties, so maybe next time (or the time after),
when I have to do a release I&amp;rsquo;ll only have to type a single command. It&amp;rsquo;ll be worth a week or two to implement this if it saves me a week
like the last one.&lt;/p&gt;

&lt;p&gt;But first, that wine&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;em&gt;No boyfriends or colleagues were harmed in the making of this post.&lt;/em&gt;&lt;/small&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adjusting to Working Remotely</title>
      <link>http://trishagee.github.io/post/adjusting_to_working_remotely</link>
      <pubDate>Fri, 31 May 2013 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>http://trishagee.github.io/post/adjusting_to_working_remotely</guid>
      <description>&lt;div&gt;One of the most obvious differences I faced when I moved from &lt;a href=&#34;http://www.lmax.com/&#34;&gt;LMAX&lt;/a&gt; to &lt;a href=&#34;http://www.10gen
.com/&#34;&gt;10gen&lt;/a&gt; were the working conditions.  I don&#39;t mean like being deep underground in some dangerous situation vs being pampered by
beautiful slave boys and girls.  What I mean is that the working practices at one company necessitated being in the office for core
hours, and at the other flexible hours and remote-working are practically mandatory.&lt;/div&gt;
&lt;br /&gt;
&lt;div&gt;At at LMAX we
pair-programmed most days, and that meant that being co-located: being in the same office, at the same computer,
was pretty important.  We could work from home when needed, but pairing is pretty tricky when you’re in a different room.&lt;br /&gt;&lt;br /&gt;The
drivers&#39; team at 10gen, on the other hand, is a very distributed team.  Sure, I&#39;m based in London,
and we have an office here.  But my main Java &#34;pair&#34; is in Boston, working from his home office.  The other driver developers are distributed around the New York, Palo Alto and London offices, with many other working from home in locations like Barcelona, Atlanta, Texas.&lt;br /&gt;&lt;br /&gt;And although I like coming in to the London office - because there I feel part of the company, and get to hear what other people are up to - it&#39;s really not that important to the day job.  There are only 3 developers based in London, and I&#39;m the only Java dev.  I started working from home a lot more when I figured I could use those 2 hours of commuting for extra coding time.&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://mechanitis.blogspot.co.uk/2008/04/tales-from-other-side-confessions-of.html&#34;&gt;I&#39;ve worked remotely before&lt;/a&gt; - I was basically the offshore resource for my team when I worked in New York - I could do out-of-hours releases and support.  This was... not the most happy time of my existence as a developer.  Moving to a new city, choosing to live alone, and working from home most days of the week would be suboptimal for many people.  So in the early days of working here I went to the office by default to postpone the inevitable insanity (insert joke here about my current sanity levels).  However, as time has gone on, I&#39;ve spent more and more time working from home: I get more done, the environment is quieter, and because I actually live with two Java developers, I sometimes have more technical help at home than in the physical office.&lt;br /&gt;&lt;br /&gt;But I constantly struggle with the feeling that I&#39;m not productive, that I&#39;m not doing enough.  The thing with pairing is you&#39;re forced to sit down and code.  Not check Facebook, not read your e-mail, not chat to your mates.  Code.  And when you&#39;re stuck, you&#39;ve got someone to talk to about it.  And when you have two or more routes that you think might work, you can decide between you which to take. And if it takes longer than you expected, there are two of you defending that.  I am totally sold on the value of pairing for productivity, in terms of number of quality features delivered.&lt;br /&gt;&lt;br /&gt;But.  The benefits to me as an individual of being able to work from home, wherever that home may be, are enormous.  And because of this, a company that embraces this policy can attract all kinds of talent that they would miss if they demanded even as little as one day a week in the office - this limitation still requires your developers to live within commuting distance.  And if you have a distributed team, your all-star team of developers, who may not be located in population density cities, might not require all-star developer salaries. Imagine if you can attract the best talent from all over the world without breaking the bank.  All because you give them what they really want - freedom.&lt;br /&gt;&lt;br /&gt;As they say, with great power comes great responsibility.  It was a shock to the system to have this level of autonomy.  I&#39;ve worked in various types of company over the 15 years people have paid me to develop code, but nothing prepared me for this.  Sure, you have deadlines, and features, and tasks, and bugs, and support cases. But you also have talks to prepare and blogs to write and tutorials to create and demo applications to code... in fact, there&#39;s so much to do it&#39;s overwhelming.  Being trusted to prioritise accordingly, and to ask for help appropriately, is a real switch from having a prioritised backlog of stories and burndown charts to guilt you into finishing off this story and moving onto the next.&lt;br /&gt;&lt;br /&gt;Far from skiving off from work when I&#39;m out of the office, I feel more internal pressure to Do A Good Job, to Justify My Existence.  When people aren&#39;t counting bums on seats, they must surely be measuring you some other way, right?  And actually, far from slacking off, one of the big problems with working from home is that you’re constantly on, and drawing a line between work and life is mandatory.  I &lt;a href=&#34;http://www.lullabot.com/blog/articles/how-working-home-works-us&#34;&gt;really liked this post&lt;/a&gt; as a description of what people have to do in order to be effective working from home.&lt;br /&gt;&lt;br /&gt;At this point I should probably clear up some common misconceptions:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Working remotely != working from home.  Co-working spaces are popping up all over the place these days, some with perks like free coffee and snacks, usually with lockers to keep your stuff in, and meeting rooms so you don’t have to meet customers or interview people in a coffee shop or shared space.  I visited &lt;a href=&#34;http://workincompany.com/en/&#34;&gt;workINcompany&lt;/a&gt; in Seville last time I was there, and I loved it as a space to create, and get stuff done.  Or you could work in a coffee shop or other establishment (I used to sit in pubs to blog, you’ll not be at all surprised to learn), or maybe you’ll borrow desk space at a friendly company.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Remote working != distributed team.  Quite a few companies will allow people to work from home (or wherever) one or more days a week, but this still requires them to be able to get into the office regularly, and therefore be within commuting distance.  &lt;a href=&#34;http://www.lullabot.com/blog/articles/yahoo-best-buy-and-telecommuting-advice-distributed-company&#34;&gt;This article&lt;/a&gt; talks about the difference.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;As ever, the answer to whether you or your company should embrace distributed working will be “&lt;a href=&#34;http://mechanitis.blogspot.co.uk/2013/03/it-depends.html&#34;&gt;it depends&lt;/a&gt;”.  I shall attempt to enumerate some of the pros and cons, and I’d love it if other people could share their experiences:&lt;br /&gt;&lt;br /&gt;&lt;b&gt;For the Individual (i.e. you): benefits of being in the office&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;The quick pint after work - this is how you really get to know your colleagues, and hear the really interesting stuff.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Overheard conversations that turn out to be relevant to you or what you’re working on.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Feeling like part of the company.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Free food!  Free drink! Birthday cake! (Mileage may vary, depending on your company)&lt;/li&gt;&lt;li&gt;...and the company is paying the heating and electricity&amp;nbsp;&lt;/li&gt;&lt;li&gt;Better desk/computer/monitor(s)/chair/set up (although It Depends, of course).&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;For the Individual: downsides of being in the office&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;(In many offices) distracting and/or noisy.  This does depend though - in a pair programming environment, there’s always a lot of talking, but it was never the same level of distraction as sales guys on the phone right next to you.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Time to commute.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Feel split - half your life is in the office, half of it is at home.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;For the Individual: benefits of being at home&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;(For some) quiet&amp;nbsp;&lt;/li&gt;&lt;li&gt;Or: you can actually listen to music without headphones - yay!&amp;nbsp;&lt;/li&gt;&lt;li&gt;The flexibility to do stuff that needs doing at home or in your personal life (I can’t believe how many places are still only open 9am-5pm) without compromising your work.&amp;nbsp;&lt;/li&gt;&lt;li&gt;You can squeeze gym/exercise into your day in the way that works best for you.  This depends, of course - if you’re working with people on the same time zone with the same hours, there’s less flexibility.  But the lack of commute generally gives you a bit more time.  And you can go when you’re blocked, or when you’ve got an hour’s slot between two video conferences that you wouldn’t use for anything else.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Which leads to: (possibly) flexible hours - in my case, I’m based in Europe but working closely with the east coast, so I could probably work any 8 hours between 8am and 11pm UK time.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Your own choice of desk/chair/computer/set up - in New York my home office was much more comfortable and productive than the hot-desk in the office&amp;nbsp;&lt;/li&gt;&lt;li&gt;Change where you work - I’m writing this on the sofa, because I wanted to be in a more comfortable and creative place for blogging than my desk, which is associated with coding.&amp;nbsp;&lt;/li&gt;&lt;li&gt;More freedom to play and explore the code or new ideas, although this is less about being distributed and more about not pairing every day. Although this could be good for innovation, it&#39;s arguably less good for writing actual useful lines of code.  So this benefit will depend on what your company needs from you&amp;nbsp;&lt;/li&gt;&lt;li&gt;I love being able to cook in my kitchen. I don’t have to grab a sandwich from Pret or whatever, I can have Real Food.  And it costs me less.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;For the company: benefits of a distributed team: &lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;In theory, being distributed means a company can hire anyone, anywhere. Which means a) you can get really good quality developers - maybe they&#39;re not as effective as they would be if they paired in an agile environment, but if there really is a &lt;a href=&#34;http://www.joelonsoftware.com/articles/HighNotes.html&#34;&gt;5-10x improvement for a good developer vs an OK one&lt;/a&gt;, you&#39;re still getting a net gain and b) if you are lucky enough to hire people outside of places like NY, London, and Silicon Valley, you can cut costs because you&#39;re paying your really good developers a very good local salary instead of a silly one that pays for silly rents and silly commuting charges.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;For the Individual: downsides of being at home &lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Can be MORE distracting - chat, email, errands, babies, dogs, flatmates, XBox.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Difficult to distance yourself from work - there’s the temptation to be always on, to just finish this or just do that.&amp;nbsp;&lt;/li&gt;&lt;li&gt;You need a good space to work, you can’t sit on the sofa or your bed all day, and not everyone has that spare room or spare space.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;For the Individual: downsides of being in a distributed team: &lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;I suspect I&#39;m less productive than I was when I worked onsite, pairing, in an agile team. By productive, I mean lines-of-code-that-go-into-production. Not having people there to help you resolve your internal arguments can result in flip-flapping and going down design dead ends.  Mind you, I do a lot more stuff than just coding these days, so this might be a result of that, and of not pairing, rather than being in a distributed team.&amp;nbsp;&lt;/li&gt;&lt;li&gt;I reckon it&#39;s taken me a lot longer to get up to speed on the code, on the product, on our processes. I can ask people when I&#39;m in the office, and of course there’s chat, but nothing beats pairing for getting up to speed extremely quickly.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Time zone differences - waiting for answers is frustrating for the impatient.  Like me.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Text based communication - quite tricky to get the right tone and not inadvertently wind people up&amp;nbsp;&lt;/li&gt;&lt;li&gt;Email. OMGTHEEMAILS!!! When I was in a company that paired every day, we didn’t really use e-mail.  We didn’t have time to read them, let alone write them.  We got up and spoke to the person.  But a distributed team is very e-mail heavy, and I constantly feel like I&#39;m drowning in mail.&amp;nbsp;&lt;/li&gt;&lt;li&gt;More meetings - because you can&#39;t just grab people and work ad-hoc, because you can’t have a daily standup in the office, and because it&#39;s important to keep people up to date on what you&#39;re working on, you have loads more meetings or scheduled updates. I have regular meetings almost every day, and I don’t mean standups.  These are necessary because we don’t all sit together and hear what’s going on, but having several hours a week devoted to video conferences is a big change to a place that limited meetings to once a fortnight.&amp;nbsp;&lt;/li&gt;&lt;li&gt;No quick-pint-after-work.  Not that I’m an alcoholic.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;So stuff that really works for me/us as a distributed team: &lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Chat/IRC.  Indispensable.&amp;nbsp;&lt;/li&gt;&lt;li&gt;E-mail for longer, searchable, async communication.  Since our team is spread over Europe and the States (and at some point soon I’m sure we’ll include other continents) you have to remember that not everyone is online at the same time as you.  If you have a bright idea at 9 in the morning in UK-time, it needs to be in the inbox of your colleagues in Palo Alto so they can read it when they start work.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Google hangout has made it &lt;i&gt;significantly&lt;/i&gt;&amp;nbsp;easier to pop into a video conference whenever you need.  Also laptops with built in mics and videos make this easier too, something I didn’t have back in 2008.&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://trello.com/&#34;&gt;Trello&lt;/a&gt; and &lt;a href=&#34;http://www.atlassian.com/software/jira&#34;&gt;Jira&lt;/a&gt;, although I still get so much spam from both I tend to ignore all notifications&amp;nbsp;&lt;/li&gt;&lt;li&gt;Regular face to face meetings.  I get to go to New York (yay!) to meet with other developers on a fairly regular basis.  And this is really key, face to face is still dead important to humans who haven’t actually evolved as fast as technology has&amp;nbsp;&lt;/li&gt;&lt;li&gt;Driver days / company kick off - department- and company-wide get-togethers to get to know each other and feel part of something.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;b&gt;Still needed: &lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Good remote-pairing tools&amp;nbsp;&lt;/li&gt;&lt;li&gt;Good tools for code review.  As a reviewer, I don’t want to view a patch set with side-by-side differences, I want to be able to see it in an IDE, to navigate it, *and* make comments or changes that the reviewee can see.  As a reviewee, I want it to be as easy as “submit this commit / set of commits for code review”.&amp;nbsp;&lt;/li&gt;&lt;li&gt;Some sort of good shared whiteboard. I hate not being able to stand up with my pair and whiteboard ideas.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;I enjoy the freedom of being in a distributed team and working from home, but I actually struggle quite a lot with the autonomy.  It&#39;s not that I can&#39;t motivate myself, if anything it&#39;s the exact opposite - while I&#39;m away from the office, away from people who can &lt;i&gt;see&lt;/i&gt; I&#39;m working, I feel the need to constantly prove I&#39;m working.  In the office, if your computer or network or software starts freaking out and you spend a whole day fixing these problems, by the time you go home in the evening you feel frustrated you didn&#39;t get any work done, but you don&#39;t feel &lt;i&gt;guilty&lt;/i&gt;.  If your internet dies at home, or you spend the whole day researching the exact git command you need, or your laptop just freaks out for the day, you feel like you should make up all those lost hours and still do your 8 hours of productive coding (or whatever you were supposed to be doing).&lt;br /&gt;&lt;br /&gt;Or maybe that&#39;s just me.&lt;br /&gt;&lt;br /&gt;I remember when I first started working as an undergraduate at Ford, the idea of being &lt;i&gt;forced&lt;/i&gt;&amp;nbsp;to sit in front of a computer from 9-5 was horrifying.  And really hard too - you couldn&#39;t just get up and take an hour to let things filter through your brain, you had to be seen to be &lt;i&gt;working&lt;/i&gt;, sitting at your desk.  And in these days of internet, sitting at a computer is almost a guarantee you&#39;re NOT working.  Going for a run or drinking coffee in the kitchen and scribbling, or even simply thinking, might be more productive.&lt;br /&gt;&lt;br /&gt;The point is that it&#39;s different working remotely. And if you&#39;ve been working in industry for a while, the idea of being self-determined takes a bit of getting used to, whether it&#39;s because you need to learn how to motivate yourself, or because you need to learn to switch off.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;I was chatting to &lt;a href=&#34;http://www.joelonsoftware.com/&#34;&gt;Joel Spolsky&lt;/a&gt; at GeeCON (*clang* gratuitous name drop) and he said Fog Creek and Stack Exchange have distributed teams.  Other than them, us, and Lullabot (the company whose blog I pointed at), I don’t know of many places that really embrace distributed working.  If you have stories to tell, I’d love to hear them.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;PS We are &lt;span id=&#34;goog_2060849182&#34;&gt;&lt;/span&gt;looking&lt;span id=&#34;goog_2060849183&#34;&gt;&lt;/span&gt; to hire more &lt;a href=&#34;http://www.10gen.com/careers/positions/java-engineer-evangelist&#34;&gt;Java&lt;/a&gt; &lt;a href=&#34;http://www.10gen.com/careers/positions/java-application-engineer&#34;&gt;people&lt;/a&gt;, as well as a &lt;a href=&#34;http://www.10gen.com/careers/positions&#34;&gt;host of others&lt;/a&gt;...&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Tales from the Other Side: Confessions of an Offshore Resource</title>
      <link>http://trishagee.github.io/post/tales_from_the_other_side_confessions_of_an_offshore_resource</link>
      <pubDate>Tue, 29 Apr 2008 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>http://trishagee.github.io/post/tales_from_the_other_side_confessions_of_an_offshore_resource</guid>
      <description>&lt;p&gt;After the acquisition of a company with offices in New York, I pestered my company outrageously until they got fed up and finally relented – they agreed to send me to the US.&lt;br/&gt;&lt;br/&gt;To ease the transition, I chose to move onto a project which would allow me to start working in London and continue on the same team after I had moved to New York.&lt;br/&gt;&lt;br/&gt;In the extreme over-excitement that followed my relocation, it took me a little while to realise that effectively I was an offshore resource, no different really from any of our Indian test team, and the team needed to manage this appropriately.&lt;br/&gt;&lt;br/&gt;I learnt a number of lessons whilst playing this game.  Some of these points are also valid for teams with remote resources (e.g. people working from home).&lt;br/&gt;&lt;br/&gt;&lt;b&gt;The Time Zone Difference is the First Problem to Overcome&lt;/b&gt;&lt;br/&gt;Yes, the geographical separation and remote access is important to consider, but it&amp;rsquo;s the time difference which is the killer.  When your working day only (officially) overlaps for 4 hours, you have to make the most of that overlap time.  Some of the steps we took to overcome this were:&lt;ol&gt;&lt;li&gt;Moved the daily team meeting from 9.15am GMT to 4pm GMT/11am EST.  Therefore I got to participate in the meeting rather than just having my instructions passed on to me.  This greatly improved communication of issues between all team members, and, more importantly to me, helped me to feel like I was still a part of a team instead of just a resource.&lt;br/&gt;&lt;li&gt;Updated the team plan so that instead of simply representing AM/PM activities for all team members, my time was staggered to better represent my working hours.  E.g. Originally the plan looked like:&lt;br/&gt;&lt;br/&gt;&lt;img src=&#34;http://photos-e.ak.facebook.com/photos-ak-sf2p/v241/234/3/545840811/n545840811_836980_6626.jpg&#34;/&gt;&lt;br/&gt;&lt;br/&gt;But the daily meetings would invariably go something like this:&lt;blockquote&gt;&lt;b&gt;Team Lead:&lt;/b&gt;          Ms US Minion, it&amp;rsquo;s Monday 4pm, you must be nearly finished with task 9, right?&lt;br/&gt;        &lt;b&gt;Ms US Minion (Me):&lt;/b&gt;  Dude, it&amp;rsquo;s Monday morning, I&amp;rsquo;ve barely finished checking my e-mail yet, I&amp;rsquo;ve just about glanced at the spec let alone started on the code.&lt;br/&gt;        &lt;b&gt;TL:&lt;/b&gt;                 Oh yeah, I forgot.  Well, it&amp;rsquo;ll be done by the end of today, right?&lt;br/&gt;        &lt;b&gt;USM:&lt;/b&gt;                Sure, no problem.&lt;br/&gt;        &lt;b&gt;TL:&lt;/b&gt;                 Right, so Bob can kick off the build before he goes home and it&amp;rsquo;ll be sweet by tomorrow morning&lt;br/&gt;        &lt;b&gt;USM:&lt;/b&gt;                Oh wait, you mean the end of YOUR day?  Erm, no, that&amp;rsquo;s not going to happen&amp;hellip;&lt;br/&gt;&lt;/blockquote&gt;&lt;br/&gt;After a number of these types of conversations we got bored of forgetting this key point and changed the plan:&lt;br/&gt;&lt;br/&gt;&lt;img src=&#34;http://photos-f.ak.facebook.com/photos-ak-sf2p/v241/234/3/545840811/n545840811_836981_7204.jpg&#34;/&gt;&lt;br/&gt;    &lt;br/&gt;Subtle change really, but it was astonishingly useful at helping us to get our heads around when things would be delivered.  If something HAD to be finished before close of business GMT, then it would be clear from the plan if that was achievable.&lt;br/&gt;&lt;li&gt;Plan to use the overlap time to best advantage.  Otherwise something that would have had you waiting for help for an hour or two has you waiting for a day.  I never really got good at this, mostly because I&amp;rsquo;m used to using my mornings for catching up on mail (which was particularly cumbersome when you have nearly a whole day&amp;rsquo;s-worth of UK-based mail to get through), checking out industry news, meetings, phone-calls to the UK etc.  I don&amp;rsquo;t usually get into the coding zone until after lunch.  Unfortunately, by 1pm EST, most of the team is wandering off home and I&amp;rsquo;ve forgotten to ask Bob for some pointers on task 10 which I know he&amp;rsquo;s looked at before.  Which means now I have to wait until tomorrow for that.&lt;br/&gt;&lt;br/&gt;Some of the ways I tried to overcome this problem:&lt;br/&gt;&lt;ul&gt;&lt;li&gt;Save non-critical or US-based e-mail replies until the afternoon.  Only deal with the time-critical ones in that early-morning e-mail frenzy.&lt;br/&gt;&lt;li&gt;In your daily TODO list, clearly mark the items which require help from the team and do those in the morning, EVEN IF they&amp;rsquo;re not as &amp;ldquo;important&amp;rdquo; as the other items.&lt;br/&gt;&lt;li&gt;For items scheduled for the afternoon, take a look at them in advance, even if it&amp;rsquo;s just the morning of the same day, ensuring there aren&amp;rsquo;t dependencies on people in the UK.  This is particularly vital for time-critical tasks like releases that need to go out that afternoon.&lt;/ul&gt;&lt;br/&gt;&lt;i&gt;What not to do&lt;/i&gt;&lt;br/&gt;Stop taking lunch.  I fell into this trap to try to increase the overlap time between me and the UK.  At the start of my time here I would not take lunch until the UK had gone home - it felt like using that hour, which falls at the end of the UK day, for “recreation” was a waste, it meant I only had 3 hours overlap with the team (if they all went home on time, and luckily for me they frequently did not).  But, this is a dumb idea.  For a start, the rest of the team frequently did not go home on time, leaving me pining round the office starving to death.  I&amp;rsquo;m one of those people who a) likes to take lunch early and b) gets moody and irritable when hungry.  So, for everyone&amp;rsquo;s sanity, it&amp;rsquo;s best if I take lunch.  The second reason this was a poor tactical move is because I was providing second-line support for the application.  So, it was all very well making myself available for the development team in the UK, but if I was away from my desk when they had all gone home, that meant the support guys who needed the development team as second-line support had no-one to turn to if I disappeared.  So, all in all, not a wise course of action.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Do Not Underestimate How Important Face to Face Contact Is&lt;/b&gt;&lt;br/&gt;It really is.  Well, maybe it’s just me, I’m only writing about my own personal experiences here, and on top of that I am A Girl so maybe we are a different species after all.  But do not neglect this facet.&lt;br/&gt;&lt;br/&gt;I had daily conferences with the team, I was including in all mails, we had a team chat channel and I regularly spoke, in one form or another, to the client and to the support guys.  But all of that cannot replace the inadvertent wince from someone when you talk about some aspect of the system, the tension you can read in someone’s shoulders when you’re talking to them, the cheeky grin or pleading look when someone asks you to do something they know isn’t in your remit but could really use from you.&lt;br/&gt;&lt;br/&gt;I was fortunate, because I already personally knew all the people I had to interact with through having been on this project in the UK - it makes it a little easier to judge who they are and how they react to things.  Even so, I found that getting communications without seeing the person put a strain on relationships – it’s so much harder to read a person’s intentions when you can’t see them: to excuse them for being offhand because they seem stressed; to phrase things carefully so as not to upset someone because it looks like it might be a sensitive subject.  That sort of thing.&lt;br/&gt;&lt;br/&gt;I also found conferencing into the team meetings a little harder than being there - it&amp;rsquo;s more difficult to gauge when to add your piece to a discussion, since you can&amp;rsquo;t see people&amp;rsquo;s faces to see if they&amp;rsquo;re going to say something.  You can&amp;rsquo;t catch someone&amp;rsquo;s eye to see how they feel about something.  You can end up in one of two opposite situations: a) you don&amp;rsquo;t say much, because you don&amp;rsquo;t know when it&amp;rsquo;s appropriate to say something, and/or people forget to include you when you&amp;rsquo;re not there, and/or the volume is up too low on the other end for it to be obvious when you want to speak or b) you talk too much – you can&amp;rsquo;t see when people want to interrupt you or add something and/or you can just keep talking loudly and everyone else in the room has to stop and listen to you (unless they hang up on you!).&lt;br/&gt;&lt;br/&gt;Lack of face-to-face contact with the client pretty much ruled out doing any work that required feedback from them.  This will depend upon your client, of course.  In the case of this client, they were very good at responding to well-planned e-mails which asked them to choose a solution from one or more options (provided the implications were well-described).  However &lt;i&gt;getting&lt;/i&gt; to the point where you have enough information to come up with these options and their implications was almost impossible if you didn&amp;rsquo;t sit down in the same room as them and talk things through.  Theoretically this could have been done over the phone, but it almost always needs diagrams and visuals, scribbling on paper and whiteboards etc., making the phone an inappropriate medium.  As a consequence, as soon as I moved offshore, I was no longer involved in any but the most basic requirements gathering.&lt;br/&gt;&lt;br/&gt;&lt;i&gt;Solutions&lt;/i&gt;&lt;br/&gt;Well, there aren’t any really.  You’re not there, you can’t see people.  You can, however, be aware of this situation and work around it.  For example:&lt;br/&gt;&lt;ol&gt;&lt;li&gt;Don’t expect an offshore resource to be able to gather complex requirements from a client.&lt;br/&gt;&lt;li&gt;Don’t expect an offshore resource to be able to explain complex issues / potential solutions to a client.  The client can ignore e-mails they don’t understand and trying to explain over the phone is difficult, and also requires finding a window that fits both schedules and both time zones.&lt;br/&gt;&lt;li&gt;Team members in all locations need to cut each-other a little slack – try to be precise in communications so that people can’t get hold of the wrong end of the stick, and in return try not to see the worst in someone’s hastily composed e-mail / train-of-consciousness chat.&lt;br/&gt;&lt;li&gt;Ensure a regular meeting with a more human element, e.g. conferencing into team meetings.  Interacting in a group like that even if you can’t see people a) helps improve the sense of team and b) provides a bit more context and feedback than simple e-mails or chat.  If you can get a video conference, even if rarely, that will help.  I can have very visual thought-processes, and something I did to help the team to think of me as a person and not just a voice or a spam-bot is to take photos of me in my working environment, and to take the team on a web-cam tour of the US office.  In return, they shared photos of the new office they had moved to since my relocation to the US.  It was fun, and helped us to connect on a more human level.&lt;/ol&gt;&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Summary&lt;/b&gt;&lt;br/&gt;Communication is, unsurprisingly, the key to productive working when the team is geographically split.  The processes we put into place to help enable this were:&lt;br/&gt;&lt;ol&gt;&lt;li&gt;Daily team meeting for the development team, at a time when all members can participate and providing facilities for all members to participate, remotely or locally (e.g. conference call).  This is not just to enable communication amongst the team, but also to help offsite resources to feel a part of the team – a little “chat time” in this meeting, rather than being all work, is fundamental for remembering we’re all human, blowing off a little steam, and generally bonding.&lt;br/&gt;&lt;li&gt;Weekly team meeting for development team plus client plus support team, again providing a way for everyone to participate.  This allows us all to swap ideas and issues regardless of where we are.&lt;br/&gt;&lt;li&gt;Work needs to be allocated at least 24 hours in advance.  This works both ways - it cannot be expected that if I’m asked to do something as the UK team goes home, they expect it complete (or even started!) by the time they get in the next day – I might need support from the team, or from other people in that time zone.  Similarly, I can&amp;rsquo;t fling stuff back to the UK at the end of my working day and expect it to be worked on by the time I get in the next day, as they might have questions for me.  And I personally get grumpy when woken up at 4am by a phone call.&lt;br/&gt;&lt;li&gt;A project plan needs to be kept up-to-date and visible to all team members.  This plan is better if it clearly represents the time zone differences between team members.&lt;br/&gt;&lt;li&gt;Although ideally all team members should be treated equally, limitations of remote-working need to be considered when allocating work – any task which requires extensive support from the rest of the team or close relations with the client is probably not appropriate for someone who doesn’t work in the same location or the same hours as the team and client.&lt;/ol&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;I was lucky:&lt;br/&gt;&lt;ul&gt;&lt;li&gt;I had a team I knew and a client I knew on a product I was familiar with (although I had to learn a LOT more in order to support it independently during the afternoons).&lt;br/&gt;&lt;li&gt;The UK team were workaholics and generally provided more of an overlap with my working day than I think is healthy for a bunch of 20-something males.&lt;br/&gt;&lt;li&gt;The UK Team Lead went above and beyond, being accessible by phone until about midnight GMT (7pm EST).  I tried not to abuse this but it definitely helped resolve pressing issues instead of having to wait another day.  In return, where possible I would check my mail and chat, however briefly, when I got up so I had a quick heads-up of the state of play at mid-morning GMT, well before I got into work.&lt;/ul&gt;&lt;br/&gt;&lt;br/&gt;In addition, I was a senior developer who had also had experience leading the UK team and gathering client requirements so I had a good view of the bigger picture of the project.  So sometimes this meant I would irritatingly question every piece of work I was allocated and be nosy about the motivations behind something, but it also meant that I had the knowledge and ability to work pretty independently from the rest of the team.  This may not apply to all offshore / remote resources.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
