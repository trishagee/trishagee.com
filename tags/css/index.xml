<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Css on Trisha Gee </title>
    <link>http://trishagee.github.io/tags/css/index.xml</link>
    <language>en-us</language>
    <author>Trisha Gee</author>
    <rights>Copyright (c) 2011 - 2014, Trisha Gee; all rights reserved.</rights>
    <updated>Mon, 03 Mar 2014 00:00:00 UTC</updated>
    
    <item>
      <title>In my day...</title>
      <link>http://trishagee.github.io/post/in_my_day</link>
      <pubDate>Mon, 03 Mar 2014 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>http://trishagee.github.io/post/in_my_day</guid>
      <description>&lt;p&gt;Web development has changed a &lt;i&gt;lot&lt;/i&gt;.&lt;br /&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;I was aware that there have been many changes in the last few years, and I’ve seen maturity come to web platforms in the form of standardisation and common reusable libraries and frameworks - and I don’t mean reusable in the way we used to “reuse” stuff by nicking it off other people’s websites when we saw something cool.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;I used to be a web developer. &amp;nbsp;Sort of. &amp;nbsp;Some times I’ve been on the bleeding edge, and others… I remember using JavaScript to call back-end services with an XML payload before people were using the term AJAX, but I also remember working on an enterprise um… “classic”… JSP application only “recently” - in fact that was probably the last job where I did anything that looked like web development.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;So this blog post is going to chart the progress of web development through my own experience.&amp;nbsp; Of course, this doesn’t by any means cover the whole spectrum, but I think my experience has been not unusual for a Java programming working through the noughties.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;Over the course of my career I moved further away from the UI, because certainly early on the money and status was in “back end”, whatever that means, and not “front end”. &amp;nbsp;Which is ridiculous, really, especially as back then you couldn’t really follow best practices and clean code and test first and all that awesome stuff when doing front end development because none of the browsers played by the rules and frankly if you got it working at all you were a bloody genius. &amp;nbsp;And that’s not even considering the fact that as a “front end” developer you should be thinking about actual real human beings who use your product, and actual real human beings are messy things and understanding them is not (we’re told) traditionally a domain that we developers are naturally proficient in.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;Anyway, I digress. &amp;nbsp;This was supposed to be a history lesson. &amp;nbsp;Or a nostalgia trip. &amp;nbsp;Or possibly Ranty Trish waving her walking stick in the air and shouting “You kids don’t know how good you’ve got it these days”. &amp;nbsp;If nothing else, I hope that it makes other “back end” developers like myself appreciate how much things have moved on.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;Let’s go back to the olden days, before I’d even graduated: picture a time before smart phones - before phones were even common (I was horribly mocked at university for being poncy enough to have a mobile), before we knew if all this work we were doing to combat the millennium bug was going to stop the end of the world. &amp;nbsp;I was doing my first summer internship at &lt;a href=&#34;http://corporate.ford.com/&#34;&gt;Ford&lt;/a&gt;, and a contractor from Logica (who don&amp;rsquo;t seem to exist any more??) told me that if I was messing around with web pages and HTML (my friends and I had geocities-and-equivalent sites) I should look at this JavaScript thing to make my pages “dynamic”. &amp;nbsp;I didn’t have to just use GIFs to bring my page to life, I could move stuff around on the page. &amp;nbsp;I think I wrote a “you are in a crowded room”-type adventure game, because my background was BASIC and that’s what you do.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;Actually I haven’t even mentioned that we were creating these websites to stay in touch with each other. &amp;nbsp;We’d discovered guest books, and used them to write comments and share stories since we’d all moved out of our home town to go to different universities. &amp;nbsp;Man, why didn’t I invent Facebook back then? &amp;nbsp;That’s what we needed.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;Anyway.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;A year later, I was back at Ford doing my &lt;a href=&#34;http://en.wikipedia.org/wiki/Sandwich_degree&#34;&gt;sandwich year-in-industry&lt;/a&gt;. &amp;nbsp;The first project I worked during this time was a web-based reporting tool that needed to dynamically display hierarchical data. &amp;nbsp;We chose JavaScript trees to render this data - my year of messing around with my website paid off, and I was able to use my “cutting edge” Javascript skills in a real production environment. &amp;nbsp;Yay? &amp;nbsp;The back end was CGI - I think I was writing in Perl, but don’t tell anyone that. &amp;nbsp;I was learning Java at university, but this was a new language and I don’t think Ford was using it yet.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;The next project was a very ambitious one - be the first car manufacturer to &lt;a href=&#34;http://www.brandrepublic.com/news/11990/Ford-Vauxhall-cut-online-car-prices/?HAYILC=RELATED&#34;&gt;sell new cars on the web&lt;/a&gt;. &amp;nbsp;Ford was well ahead of their time - the millennium bug had not killed us all, but people were barely buying books online, never mind spending tens of thousands of pounds on a car they’d never driven. &amp;nbsp;But it wasn’t just ahead of its time from a business point of view, technically it was very advanced too - we used lots of “DHTML” (as we were now calling it), a new-fangled technology called ASP, and we were writing modular, reusable &lt;a href=&#34;http://www.microsoft.com/com/default.mspx&#34;&gt;COM&lt;/a&gt;ponents. &amp;nbsp;We used XSLT to parse the XML from the COM objects, and the ASP figured out whether you were Netscape or Internet Explorer (Firefox wasn’t even a gleam in the inventor’s eye, and forget Chrome, I think we using &lt;a href=&#34;http://www.altavista.com/&#34;&gt;Alta Vista&lt;/a&gt; (whaaaat? AltaVista got bought by Yahoo??) not some new-fangled search engine beginning with G) so it could use the right XSLT to turn the XML into HTML that was readable by the browser you were using. &amp;nbsp;My job was to get the DHTML pages rendering and animating correctly in both IE4 and Netscape 4. &amp;nbsp;That was a lot of fun for me, but also very challenging.&amp;nbsp; And imagine my shock when a few months later I tested the site from the university UNIX machines to find that Netscape rendered it completely differently under UNIX.&amp;nbsp; I learnt a lesson about how important it was to test on different platforms.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;We had some smart Microsoft people helping us out with this project, and, because it was 2000 and the &lt;a href=&#34;http://en.wikipedia.org/wiki/Dot-com_bubble&#34;&gt;dot com crash&lt;/a&gt;&amp;nbsp;hadn’t happened just yet, we also had a lot of young, overpaid, overconfident contractors who believed anything was possible. &amp;nbsp;I learnt a lot during this time, not just about the technology, but also about different approaches to shaping your IT career. &amp;nbsp;And about how much you could earn before you were 25. &amp;nbsp;I was definitely going to be a programmer when I left university the next year.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;Yeah, so… I graduated in 2001. &amp;nbsp;If you were around then, you’ll remember that getting a job was a bit more difficult than I had anticipated, especially as these young, overpaid contractors were now desperately grabbing anything they could find. &amp;nbsp;But that’s a story for another day.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;I didn’t go back to Ford straight away, I’d “been there and done that”. &amp;nbsp;I worked on the website for &lt;a href=&#34;http://commonpurpose.org.uk/&#34;&gt;Common Purpose&lt;/a&gt;. &amp;nbsp;On the first day, they sat me down with &lt;a href=&#34;http://www.amazon.com/gp/product/1861003625/ref=as_li_tf_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=1861003625&amp;amp;linkCode=as2&amp;amp;tag=trissramb-20&#34;&gt;a book on JSP and Servlets&lt;/a&gt;, and that was my reading material for the next few weeks. &amp;nbsp;If I’d been fresh out of university where we’d been doing Applets, and where I’d written a Swing app on the side for my Dad’s school, this would have been a big mindset change for me. &amp;nbsp;But having worked on the ASPs it wasn’t such a big shift. &amp;nbsp;I did, however, like how JSPs and servlets made the separation between the view and all-of-the-other-logic-stuff a bit clearer - back in ASP-land we’d settled on a convention of dealing with the form data from the previous page in the first part of the ASP, and rendering the new page in the second part. &amp;nbsp;To this day I still don’t know what we should have been doing instead. &amp;nbsp;But in JSP-land it only took me&amp;hellip; I dunno, about 6 months I think, to get the website up and running. &amp;nbsp;The most difficult section was &lt;a href=&#34;http://web.archive.org/web/20021001132257/http://www.commonpurpose.org.uk/home/apply-online.vdf&#34;&gt;registrations&lt;/a&gt;. &amp;nbsp;And yes, I was a graduate, and yes, I was new, but that was a good turnaround for a web application “in those days”.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;In my spare time I used what I’d learnt on &lt;a href=&#34;http://blews-ltb.co.uk/knot.asp&#34;&gt;the blews website&lt;/a&gt;. &amp;nbsp;I even had a section where people could log in and &lt;a href=&#34;http://web.archive.org/web/20050322033948/http://www.blews-ltb.co.uk/photographs/photo.jsp?section=20&#34;&gt;comment on photos&lt;/a&gt;&amp;nbsp;- we had whole conversations on this website. &amp;nbsp;It was a way for me and my friends to stay in touch. &amp;nbsp;If I’d cracked the photo-uploading instead of it being a manual process for me, I would have invented Facebook. &amp;nbsp;If only I’d known….&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;The work dried up and there was nothing else for a graduate in the early noughties, so I went back to Ford. &amp;nbsp;My first role back I picked the same technologies we’d been using before - XML, XSLT, only this time we were using JSPs instead of ASP. &amp;nbsp;Our project had a very tight budget and we’d worked out that using open source Java technologies and running the application on one of the many UNIX machines lying around the place was a lot cheaper than the Microsoft solution. &amp;nbsp;I think we were the first team in Ford Europe to pick Java at a time when the recommended approach was Microsoft. &amp;nbsp;We delivered on time and under budget, and Java was the way forward for the department from then on. &amp;nbsp;But on this project I met a guy who would impact my career probably more than he even realises, a guy I’d work with again later. &amp;nbsp;He told me that in Java we no longer used Vector by default, but ArrayList (whaaat? What’s an &lt;a href=&#34;http://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html&#34;&gt;ArrayList&lt;/a&gt;? I had no idea what the differences were between Java 1.1, which we’d learnt at university, and Java 1.2, which was now standard). &amp;nbsp;And questioned my choice of XML/XSL. &amp;nbsp;Although I’d been learning new technologies and growing, he was the one who made it clear to me that I needed to keep myself ahead of the curve with the technologies I was using, or planned to use, if I wanted to stay relevant and make my life easier.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;On the next project I worked with a genius guy who was definitely keeping ahead of the curve - he was using JavaScript to send small XML payloads to the server (which was coded in Java), and rendering the response in place on the page instead of reloading the whole thing. &amp;nbsp;Mind. &amp;nbsp;Blown. &amp;nbsp;I didn’t even hear the term &lt;a href=&#34;http://en.wikipedia.org/wiki/Ajax_(programming)&#34;&gt;Ajax&lt;/a&gt;&amp;nbsp;until a year or more later. &amp;nbsp;We were fortunate in that this was once again an internal application, so we controlled the browser. &amp;nbsp;This was back in the days when you wanted your users to be on IE5, as this was the only browser that supported this functionality.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;The next few projects/jobs I worked on were all more pedestrian variations on the JSP theme - first I learnt &lt;a href=&#34;https://struts.apache.org/release/1.3.x/userGuide/release-notes-1_1.html&#34;&gt;Struts&lt;/a&gt;, which at least made us realise there was a model, a view, and a controller. &amp;nbsp;Then at &lt;a href=&#34;http://web.archive.org/web/20050211061038/http://www.touchclarity.co.uk/&#34;&gt;Touch Clarity&lt;/a&gt; I learnt about &lt;a href=&#34;https://spring.io/blog/2004/03/24/spring-framework-1-0-final-released&#34;&gt;Spring MVC&lt;/a&gt;, which actually put the validation errors next to the boxes which cause the error - by default, without you having to mess around. &amp;nbsp;Spring was a revelation too, a framework that really tried not to get in your way. &amp;nbsp;It was also frustrating because you needed to understand its lifecycle, but it did so much heavy lifting for you, it sped up standard CRUD-app web development enormously.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;A couple of years passed, during which time I was still working on a web application (for an investment bank) but I can’t for the life of me remember what technologies we used (other than Java). &amp;nbsp;I know it was hard to test and I know the tricky stuff was “back end” not “front end”.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;In the next project where I had any control of the technology, I picked Spring since I’d had such a good experience previously. &amp;nbsp;It took 4 developers a couple of months or so to develop an admin application for a trading app. &amp;nbsp;Given the previous timescales I’d worked with, this seemed pretty good. &amp;nbsp;Until a few months later and two other guys on the project produced an admin app for our bank users in a matter of weeks. &amp;nbsp;I can’t remember what they used, maybe &lt;a href=&#34;http://grails.org/&#34;&gt;Grails&lt;/a&gt;? &amp;nbsp;But it was another demonstration of how I really should have been researching the field instead of simply sticking with what I knew, especially when I knew my knowledge was a couple of years out of date.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;Fast forward to &lt;a href=&#34;http://www.lmax.com/&#34;&gt;LMAX&lt;/a&gt;, and we were using &lt;a href=&#34;http://en.wikipedia.org/wiki/Google_Web_Toolkit&#34;&gt;GWT&lt;/a&gt;, pre-2.0 - I think this probably feels natural if you’ve been a Swing or AWT developer, but I’m still not convinced it’s a sound web platform (although I know it has improved). &amp;nbsp;It was great because cross-browser was no longer an issue, but it was bad because it separates you from the underlying HTML, which means you can &lt;a href=&#34;http://mechanitis.blogspot.co.uk/2011/01/gwt-why-verticalpanel-is-evil.html&#34;&gt;seriously mess up without realising&lt;/a&gt;. &amp;nbsp;It’s also hard to use CSS correctly when you don’t have access to all the HTML components.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;So we come to more-or-less the present day, as it should be fairly obvious that during the time I’ve been working on the &lt;a href=&#34;https://github.com/mongodb/mongo-java-driver&#34;&gt;MongoDB Java Driver&lt;/a&gt;&amp;nbsp;I haven’t done a lot of GUI development. I’m lucky because attending lots of conferences means I see a lot more of the current-trending technologies, but up until a couple of weeks ago I hadn’t had a chance to play with any of them.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;So now I’ve been trying &lt;a href=&#34;http://angular.js/&#34;&gt;Angular.js&lt;/a&gt;, &lt;a href=&#34;http://getbootstrap.com/&#34;&gt;Bootstrap&lt;/a&gt;, and &lt;a href=&#34;http://angular-ui.github.io/bootstrap/&#34;&gt;UI Bootstrap&lt;/a&gt;. &amp;nbsp;My goodness. &amp;nbsp;It’s a whole &amp;lsquo;nother world. &amp;nbsp;I’m seeing at conferences and user groups that developers are increasingly polyglot, so maybe there’s no such thing as “just” a Java developer any more, but if you are “just” a Java developer, I think it could be… interesting… to get your head around some of the techniques. &amp;nbsp;Since we don’t have closures, our callbacks are ugly and we tend not to program that way. &amp;nbsp;Async is not something that comes naturally in a Java environment, I believe, although after working that way at LMAX I’m personally sold on it. &amp;nbsp;Old-world JavaScript developers like I am/was might also find it hard to understand you can have clean, testable JavaScript code which Just Works. &amp;nbsp;It didn’t even occur to me to worry about browser compatibility, and my app not only worked on my phone as well as my laptop, but looked really phone-ish and awesome with very minimal effort.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;I’m currently on a plane on the way to QCon London where I’m &lt;a href=&#34;http://qconlondon.com/london-2014/presentation/HTML5,%20Angular.js,%20Groovy,%20Java,%20MongoDB%20all%20together%20-%20what%20could%20possibly%20go%20wrong?&#34;&gt;going to demo&lt;/a&gt; this Brave New World of web development (together with a nice Java back end to prove how awesome Java is to work with and, of course, a MongoDB database). &amp;nbsp;So it is not my intention in this post to explore what this new world looks like. &amp;nbsp;But I have seen the Present, and it’s a lot better than the Past. &amp;nbsp;Kids These Days don’t know how good they’ve got it - they’ve never had to struggle, to fight the browser, to hand-craft their JavaScript like we have, or had to work with raw, low-level JSPs and Servlets.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;Now things are easier. &amp;nbsp;There are standards, there are libraries, there are best practices and YouTube videos showing you &lt;a href=&#34;http://www.youtube.com/watch?v=i9MHigUZKEM&#34;&gt;how to create apps in 60 minutes&lt;/a&gt;&amp;nbsp;(back in My Day I had to borrow someone else’s browser to use the Internet, and I debated for years the value of spending my own actual money on a Javascript actual paper actual book, which I could not afford). &amp;nbsp;Now, you can get something quite pretty and functionally interesting, working in a lot less time than I realised. &amp;nbsp;But that doesn’t mean the Kids These Days have it easier - it means there is so much more potential. &amp;nbsp;Instead of beating your head against trying to get a specific version of IE to do what you want, instead of having to write separate pages for different browsers (although maybe that still goes on), you can be exploring so much further into the possible, try things that no-one else has done yet. &amp;nbsp;It opens up so many interesting possibilities for apps on all platforms.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;p1&#34;&gt;Exciting times.&lt;/div&gt;&lt;div class=&#34;p2&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class=&#34;p1&#34;&gt;So next time someone asks me “What is the de facto front-end framework for Java?” I’m going to say HTML5, CSS and JavaScript.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS for Developers: Horizontal and Vertical Centring</title>
      <link>http://trishagee.github.io/post/css_for_developers_horizontal_and_vertical_centring</link>
      <pubDate>Tue, 12 Apr 2011 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>http://trishagee.github.io/post/css_for_developers_horizontal_and_vertical_centring</guid>
      <description>&lt;p&gt;First, an apology. &amp;nbsp;I will be using the British spelling for &amp;ldquo;centre&amp;rdquo;, because, well, I&amp;rsquo;m British. &amp;nbsp;But it gets really confusing because you have to use the American spelling in the code. &amp;nbsp;And doesn&amp;rsquo;t &amp;ldquo;Centring&amp;rdquo; just look wrong?&lt;br /&gt;&lt;br /&gt;&lt;div style=&#34;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&#34;&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;color: #333333; font-family: Arial, Tahoma, Helvetica, FreeSans, sans-serif; font-size: 18px; font-weight: bold; line-height: 20px;&#34;&gt;Part Five: Horizontal and Vertical Centring&lt;/span&gt;&lt;/div&gt;One of the most common things you want to do with blocks of content is to centre it. &amp;nbsp;In particular, you would think that vertically centring content would be straightforward, but it turns out that in HTML/CSS it just isn&amp;rsquo;t.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;5.1 Horizontal Centring&lt;/b&gt;&lt;br /&gt;Centring a paragraph of text is clearly easy - all you need is &lt;code&gt;text-align: center&lt;/code&gt;. &amp;nbsp;However, sometimes you want to centre a block, something like a div, without having all the text centred as well. &amp;nbsp;This is slightly trickier than you might expect, because the only CSS attributes you have are for centring text.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-s_aPLxH1lO0/TZ85v7cEiDI/AAAAAAAAH-s/f6Glb4ynFq8/s1600/Horizontal+Centering.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;310&#34; src=&#34;http://1.bp.blogspot.com/-s_aPLxH1lO0/TZ85v7cEiDI/AAAAAAAAH-s/f6Glb4ynFq8/s400/Horizontal+Centering.png&#34; width=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;blockquote style=&#34;clear: both;&#34;&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Horizontal Centering&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        #div1, #div13 {&lt;br /&gt;            background-color: #DDDDDD;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        #div2, #div14 {&lt;br /&gt;            background-color: #BBBBBB;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        #div3, #div15 {&lt;br /&gt;            background-color: #999999;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        #container, #container5 {&lt;br /&gt;            border: 1px solid black;&lt;br /&gt;            margin: 5px;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        #container5 {&lt;br /&gt;            text-align: center;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        #to-center {&lt;br /&gt;            margin-left: auto;&lt;br /&gt;            margin-right: auto;&lt;br /&gt;            width: 200px;&lt;br /&gt;            border: 5px solid red;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        #to-center2 {&lt;br /&gt;            margin-left: auto;&lt;br /&gt;            margin-right: auto;&lt;br /&gt;            width: 200px;&lt;br /&gt;            border: 5px solid red;&lt;br /&gt;            display: block;&lt;br /&gt;            position: relative;&lt;br /&gt;            text-align: left;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;to-center&amp;rdquo;&amp;gt;&lt;br /&gt;        &amp;lt;div id=&amp;ldquo;div1&amp;rdquo;&amp;gt;One&amp;lt;/div&amp;gt;&lt;br /&gt;        &amp;lt;div id=&amp;ldquo;div2&amp;rdquo;&amp;gt;Two&amp;lt;/div&amp;gt;&lt;br /&gt;        &amp;lt;div id=&amp;ldquo;div3&amp;rdquo;&amp;gt;Three&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container5&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;to-center2&amp;rdquo;&amp;gt;&lt;br /&gt;        &amp;lt;div id=&amp;ldquo;div13&amp;rdquo;&amp;gt;One&amp;lt;/div&amp;gt;&lt;br /&gt;        &amp;lt;div id=&amp;ldquo;div14&amp;rdquo;&amp;gt;Two&amp;lt;/div&amp;gt;&lt;br /&gt;        &amp;lt;div id=&amp;ldquo;div15&amp;rdquo;&amp;gt;Three&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;Using &lt;code&gt;margin-left: auto&lt;/code&gt; and &lt;code&gt;margin-right: auto&lt;/code&gt; on the block you want to centre is a neat trick for doing this. &amp;nbsp;And it works fine in Chrome and Firefox. &amp;nbsp;However, it&amp;rsquo;s not so great in IE 7:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-7CjwdD0e5Zs/TaQMBDIixyI/AAAAAAAAH-0/pr1B7IG1ZTw/s1600/centering-in-ie.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;173&#34; src=&#34;http://3.bp.blogspot.com/-7CjwdD0e5Zs/TaQMBDIixyI/AAAAAAAAH-0/pr1B7IG1ZTw/s400/centering-in-ie.png&#34; width=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The trick for getting it centred here (the second block) is to set &lt;code&gt;text-align: centre&lt;/code&gt; on the div containing the block to centre (&lt;code&gt;container5&lt;/code&gt;), then reset the &lt;code&gt;text-align&lt;/code&gt; to &lt;code&gt;left&lt;/code&gt; on the centred block (&lt;code&gt;to-center2&lt;/code&gt;) so the text isn&amp;rsquo;t centred. &amp;nbsp;Yes, a total faff.&lt;br /&gt;&lt;br /&gt;However, there is some good news. &amp;nbsp;You can get IE to behave the same way as the more sane browsers by setting it into Strict Mode:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-leiXBjTwj-Q/TaQN9OV5ToI/AAAAAAAAH-4/qKj3Kr8nOxc/s1600/strict-mode-ie.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;173&#34; src=&#34;http://1.bp.blogspot.com/-leiXBjTwj-Q/TaQN9OV5ToI/AAAAAAAAH-4/qKj3Kr8nOxc/s400/strict-mode-ie.png&#34; width=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Remember kids: Strict Mode Is Your Friend. &amp;nbsp;And all you need to do is add the following to the top of your HTML file:&lt;br /&gt;&lt;blockquote style=&#34;clear: both;&#34;&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE HTML PUBLIC &amp;ldquo;-//W3C//DTD HTML 4.01//EN&amp;rdquo; &amp;ldquo;&lt;a href=&#34;http://www.w3.org/TR/html4/strict.dtd&amp;quot;&amp;amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;b&amp;gt;5.2&#34;&gt;http://www.w3.org/TR/html4/strict.dtd&amp;quot;&amp;amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;&amp;lt;b&amp;gt;5.2&lt;/a&gt; Vertical Centring&lt;/b&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-MfC3Bqvoif4/TaQQafZOJWI/AAAAAAAAH-8/f-Micc1inTU/s1600/Screenshot-Vertical+Centering+-+Google+Chrome.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;311&#34; src=&#34;http://4.bp.blogspot.com/-MfC3Bqvoif4/TaQQafZOJWI/AAAAAAAAH-8/f-Micc1inTU/s400/Screenshot-Vertical+Centering+-+Google+Chrome.png&#34; width=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;blockquote style=&#34;clear: both;&#34;&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Vertical Centering&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        #div1, #div4, #div7 {&lt;br /&gt;            background-color: #DDDDDD;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        #div3, #div6, #div9 {&lt;br /&gt;            background-color: #999999;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        #div5 {&lt;br /&gt;            height: 40px;&lt;br /&gt;            line-height: 40px;&lt;br /&gt;            background-color: yellow;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        #div2 {&lt;br /&gt;            height: 50px;&lt;br /&gt;            background-color: orange;&lt;br /&gt;            vertical-align: middle;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        #div8 {&lt;br /&gt;            height: 40px;&lt;br /&gt;            line-height: 40px;&lt;br /&gt;            background-color: cyan;&lt;br /&gt;            font-weight: bolder;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;        #container1, #container2, #container3 {&lt;br /&gt;            border: 1px solid black;&lt;br /&gt;            margin: 5px;&lt;br /&gt;        }&lt;br /&gt;&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container2&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;div4&amp;rdquo;&amp;gt;One&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;div5&amp;rdquo;&amp;gt;Two&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;div6&amp;rdquo;&amp;gt;Three&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container1&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;div1&amp;rdquo;&amp;gt;One&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;div2&amp;rdquo;&amp;gt;Two&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;div3&amp;rdquo;&amp;gt;Three&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container3&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;div7&amp;rdquo;&amp;gt;One&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;div8&amp;rdquo;&amp;gt;Massive line of text that needs to wrap to show the centering totally doesn&amp;rsquo;t work when you have more than one line of text.&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;div9&amp;rdquo;&amp;gt;Three&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;Given some of the problems with horizontal alignment, it shouldn&amp;rsquo;t come as a surprise to find vertical alignment is not simple at all.&lt;br /&gt;&lt;br /&gt;Us straightforward developer types would expect to be able to put &lt;code&gt;vertical-align: middle&lt;/code&gt; on a div and expect all content inside that div to be, well, vertically aligned in the middle. &amp;nbsp;However this is not the case - see the orange block above. &amp;nbsp;A quick Google will tell you why this doesn&amp;rsquo;t work, and I don&amp;rsquo;t intend to duplicate the explanation here.&lt;br /&gt;&lt;br /&gt;There is a nice hack which works for single lines of text though: if you set the &lt;code&gt;height&lt;/code&gt; of the container and the &lt;code&gt;line-height&lt;/code&gt; to the same value, the text will be vertically centred within that container (see the yellow panel, &lt;code&gt;div5&lt;/code&gt;, above). This works really well for things like buttons or icons.&lt;br /&gt;&lt;br /&gt;However, it doesn&amp;rsquo;t work so well for paragraphs of text or sentences that might wrap, &lt;code&gt;line-height&lt;/code&gt; is for a single line of text only. &amp;nbsp;See the cyan panel above for what happens if your text wraps.&lt;br /&gt;&lt;br /&gt;I&amp;rsquo;d love to give you an answer on how to get this to work for text that wraps, but I haven&amp;rsquo;t found a satisfactory solution yet. &amp;nbsp;What I usually do is set a fixed height on the container and then set the margin on the text so that it sits in a way that looks vaguely centred. &amp;nbsp;Not a solution I&amp;rsquo;m happy with, because a) it can sometimes render slightly differently on different browsers b) it&amp;rsquo;s a very fragile solution if you&amp;rsquo;re going to internationalise your page as some languages will have longer or shorter paragraphs and c) it feels like a massive hack.&lt;br /&gt;&lt;br /&gt;If anyone has a nice solution for vertically centring paragraphs of text I&amp;rsquo;d love to hear it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS for Developers: Cross Browser Table Border Behaviour</title>
      <link>http://trishagee.github.io/post/css_for_developers_cross_browser_table_border_behaviour</link>
      <pubDate>Fri, 28 Jan 2011 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>http://trishagee.github.io/post/css_for_developers_cross_browser_table_border_behaviour</guid>
      <description>&lt;p&gt;One of the aims of this series is to highlight some stupid gotchas in support for CSS in the different browsers.&lt;br /&gt;&lt;br /&gt;Today&amp;rsquo;s gotcha is table borders.&lt;br /&gt;&lt;br /&gt;Yes, yes, I said don&amp;rsquo;t use tables. &amp;nbsp;What I means is, don&amp;rsquo;t use tables for layout. But you can use tables for, you know, tabular data. &amp;nbsp;Like, for examples, &lt;a href=&#34;http://www.lmaxtrader.co.uk/&#34;&gt;lists of instruments and their bid and ask prices&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;But you should know that even when you use strict mode, Internet Explorer has slightly&amp;hellip; eccentric&amp;hellip; rendering behaviour for tables. &amp;nbsp;Actually to be specific, it&amp;rsquo;s IE7 only.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_7adQd_YVgmQ/TUKbXmpH7EI/AAAAAAAAH8U/r5TfaQlzi9E/s1600/Screen+shot+2011-01-28+at+10.28.51.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/_7adQd_YVgmQ/TUKbXmpH7EI/AAAAAAAAH8U/r5TfaQlzi9E/s1600/Screen+shot+2011-01-28+at+10.28.51.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Table Borders&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        table, td {&lt;br /&gt;            border: 1px solid black;&lt;br /&gt;        }&lt;br /&gt;        td {&lt;br /&gt;            height: 20px;&lt;br /&gt;            min-width: 5px;&lt;br /&gt;        }&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;table cellpadding=&amp;ldquo;0&amp;rdquo; cellspacing=&amp;ldquo;0&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;tr&amp;gt;&lt;br /&gt;        &amp;lt;td&amp;gt;first cell&amp;lt;/td&amp;gt;&lt;br /&gt;        &amp;lt;td&amp;gt;second&amp;lt;/td&amp;gt;&lt;br /&gt;    &amp;lt;/tr&amp;gt;&lt;br /&gt;    &amp;lt;tr&amp;gt;&lt;br /&gt;        &amp;lt;td&amp;gt;&lt;br /&gt;            &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;br /&gt;        &amp;lt;/td&amp;gt;&lt;br /&gt;        &amp;lt;td&amp;gt;&lt;br /&gt;            &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;br /&gt;        &amp;lt;/td&amp;gt;&lt;br /&gt;    &amp;lt;/tr&amp;gt;&lt;br /&gt;&amp;lt;/table&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;br /&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;br /&gt;The HTML here is a simple table with a border round all the cells (using CSS &lt;code&gt;border&lt;/code&gt;, not the deprecated border attribute on the table) - a fairly common situation.&lt;br /&gt;&lt;br /&gt;This is how it renders in IE7:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_7adQd_YVgmQ/TUKh2Lb-S0I/AAAAAAAAH8c/9BQkjC_UaFg/s1600/table-borders-in-ie.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;466&#34; src=&#34;http://4.bp.blogspot.com/_7adQd_YVgmQ/TUKh2Lb-S0I/AAAAAAAAH8c/9BQkjC_UaFg/s640/table-borders-in-ie.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Note the distinct lack of a border around the lower two cells. &amp;nbsp;If a table cell is empty, or contains a div which is empty, IE doesn&amp;rsquo;t render the cell at all.&lt;br /&gt;&lt;br /&gt;The cheat to get around this is to add &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; into every empty cell - either inside the div, if there&amp;rsquo;s a div in there, or inside the td if there&amp;rsquo;s nothing else in there. &amp;nbsp;Then IE wakes up and remembers to render the borders.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS for Developers: Column Layout Using CSS</title>
      <link>http://trishagee.github.io/post/css_for_developers_column_layout_using_css</link>
      <pubDate>Tue, 25 Jan 2011 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>http://trishagee.github.io/post/css_for_developers_column_layout_using_css</guid>
      <description>&lt;p&gt;This is a continuation of my &lt;a href=&#34;http://mechanitis.blogspot.com/search/label/css&#34;&gt;series of CSS&lt;/a&gt; hints / tips / cheats for developers (and other technical-but-not-UI people).&lt;br /&gt;&lt;br /&gt;The screenshots are in Chrome on a Mac. &amp;nbsp;The originals were on Firefox on Ubuntu so I can tell you the behaviour is identical.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Part Three: Column Layout Using CSS (or: still no excuse to use tables)&lt;/h3&gt;&lt;div&gt;Today&amp;rsquo;s example is a simple one, but worth knowing all the same. &amp;nbsp;The aim is, once again, not to use HTML tables to provide any sort of layout. &amp;nbsp;In most cases not only does using a div reduce the size of your DOM (and potentially help &lt;a href=&#34;http://mechanitis.blogspot.com/2011/01/gwt-why-verticalpanel-is-evil.html&#34;&gt;improve the performance of your page&lt;/a&gt;), it&amp;rsquo;s actually a lot less complicated to organise your layout this way.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h4&gt;3.1 Display Elements or Text in Columns&lt;/h4&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/_7adQd_YVgmQ/TT1v4bAebwI/AAAAAAAAH8Q/oM4PAaNx3dI/s1600/Screen+shot+2011-01-24+at+12.21.02.png&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/_7adQd_YVgmQ/TT1v4bAebwI/AAAAAAAAH8Q/oM4PAaNx3dI/s1600/Screen+shot+2011-01-24+at+12.21.02.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div style=&#34;clear: both;&#34;&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Column layout&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        #col1 {&lt;br /&gt;            background-color: yellow;&lt;br /&gt;            /*&lt;em&gt;have to know the width &lt;/em&gt;*/&lt;br /&gt;            width: 30%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #col2 {&lt;br /&gt;            background-color: lightBlue;&lt;br /&gt;            width: 30%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;col1&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div&amp;gt;1&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div&amp;gt;2&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;col2&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div&amp;gt;3&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div&amp;gt;4&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;div&gt;Again you can see we&amp;rsquo;re &lt;a href=&#34;http://mechanitis.blogspot.com/2011/01/css-for-developers-joy-of-floats.html&#34;&gt;using &lt;code&gt;float&lt;/code&gt; on the divs&lt;/a&gt; to get them to appear side-by side.&lt;br /&gt;&lt;br /&gt;The code is much more intuitive organised this way - everything from a single column is grouped together in a single div. &amp;nbsp;If this was done using tables, you&amp;rsquo;d have the content for a single column scattered in different cells on different rows of the table. &amp;nbsp;Re-arranging the order of the columns in the case of tables is much more of a pain in the neck. &amp;nbsp;With a div, it&amp;rsquo;s a simple move.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS for Developers: The Joy of Floats</title>
      <link>http://trishagee.github.io/post/css_for_developers_the_joy_of_floats</link>
      <pubDate>Wed, 19 Jan 2011 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>http://trishagee.github.io/post/css_for_developers_the_joy_of_floats</guid>
      <description>&lt;p&gt;As promised, the Long Awaited Follow-Up to &lt;a href=&#34;http://mechanitis.blogspot.com/2011/01/css-for-developers-horizontal-layout.html&#34;&gt;CSS for Developers Part One&lt;/a&gt;! Well, long-awaited if you&amp;rsquo;re as afflicted with &lt;a href=&#34;http://randsinrepose.com/archives/2003/07/10/nadd.html&#34;&gt;NADD&lt;/a&gt; as I am.&lt;br /&gt;&lt;br /&gt;Quick recap - the aim of this series is to provide a quick and easy how-to around the magic that is CSS. &amp;nbsp;It&amp;rsquo;s primarily aimed at developers, although I would hope it&amp;rsquo;s comprehensible to a range of tech-savvy people.&lt;br /&gt;&lt;br /&gt;(Note: unless otherwise stated, the screenshots are in Chrome on a Mac - given an earlier version of this guide I can tell you the behaviour is identical to Firefox on Ubuntu).&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Part Two: The Joy of Floats (or: why they don&amp;rsquo;t do what you think they should)&lt;/h3&gt;&lt;div&gt;&lt;a href=&#34;http://mechanitis.blogspot.com/2011/01/css-for-developers-horizontal-layout.html&#34;&gt;Last time&lt;/a&gt; I stated that using float is a great way to position elements contained in a div. &amp;nbsp;Well, it has its downsides too. &amp;nbsp;Quite a few actually.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So this post documents the ones I ran into and what we did on the&amp;nbsp;&lt;a href=&#34;http://www.lmaxtrader.co.uk/trading-platforms/web-platform&#34;&gt;LMAX Trader UI&lt;/a&gt;&amp;nbsp;to get it to look the way we wanted.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Disclaimer: There might be better ways to do a lot of this stuff - if you locate them via Google or work them out for yourself then well done!&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h4&gt;2.1 Starting a New Line Using Floats&lt;/h4&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_7adQd_YVgmQ/TTWDOKiuyGI/AAAAAAAAH7o/aW8vVEQPwg0/s1600/Screen+shot+2011-01-18+at+12.09.10.png&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/_7adQd_YVgmQ/TTWDOKiuyGI/AAAAAAAAH7o/aW8vVEQPwg0/s1600/Screen+shot+2011-01-18+at+12.09.10.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;blockquote style=&#34;clear: both;&#34;&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Horizontal flow&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        #left {&lt;br /&gt;            background-color: cyan;&lt;br /&gt;            width: 50%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #center {&lt;br /&gt;            background-color: yellow;&lt;br /&gt;            width: 50%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #right {&lt;br /&gt;            background-color: red;&lt;br /&gt;            width: 50%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #next-line {&lt;br /&gt;            background-color: green;&lt;br /&gt;            width: 200px;&lt;br /&gt;            clear: left;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;left&amp;rdquo;&amp;gt;Left&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;center&amp;rdquo;&amp;gt;Center&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;right&amp;rdquo;&amp;gt;Right&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;next-line&amp;rdquo;&amp;gt;Next Line&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;clear: left&lt;/code&gt; will reset any left float from before the div it is applied to. This will cause the div to be shown on a new line, although it can still have a float property as well&lt;/li&gt;&lt;li&gt;&lt;code&gt;clear: right&lt;/code&gt; will put the div below any divs with a right float applied&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;code&gt;clear: both&lt;/code&gt; will do both.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;I usually do&amp;nbsp;&lt;code&gt;clear: both&lt;/code&gt;&amp;nbsp;if I need to ensure the div will be on a new line.&lt;/div&gt;&lt;br /&gt;&lt;h4&gt;2.2 Right Aligning Floated Divs&lt;/h4&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_7adQd_YVgmQ/TTWQ_QYj2wI/AAAAAAAAH7s/fEbaFExTDoU/s1600/Screen+shot+2011-01-18+at+13.07.35.png&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/_7adQd_YVgmQ/TTWQ_QYj2wI/AAAAAAAAH7s/fEbaFExTDoU/s1600/Screen+shot+2011-01-18+at+13.07.35.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Float Right&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        #left {&lt;br /&gt;            float: right;&lt;br /&gt;            border: 1px solid gray;&lt;br /&gt;        }&lt;br /&gt;        #center {&lt;br /&gt;            float: right;&lt;br /&gt;            border: 1px solid gray;&lt;br /&gt;        }&lt;br /&gt;        #right {&lt;br /&gt;            float: right;&lt;br /&gt;            border: 1px solid gray;&lt;br /&gt;        }&lt;br /&gt;        #container {&lt;br /&gt;            background-color: yellow;&lt;br /&gt;            height: 26px;&lt;br /&gt;        }&lt;br /&gt;        #left2 {&lt;br /&gt;            float: left;&lt;br /&gt;            border: 1px solid gray;&lt;br /&gt;        }&lt;br /&gt;        #center2 {&lt;br /&gt;            float: left;&lt;br /&gt;            border: 1px solid gray;&lt;br /&gt;        }&lt;br /&gt;        #right2 {&lt;br /&gt;            float: left;&lt;br /&gt;            border: 1px solid gray;&lt;br /&gt;        }&lt;br /&gt;        #container2 {&lt;br /&gt;            clear: both;&lt;br /&gt;            float: right;&lt;br /&gt;            background-color: #90ee90;&lt;br /&gt;            height: 26px;&lt;br /&gt;        }&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;container&amp;rdquo;&amp;gt;&lt;br /&gt;        &amp;lt;div id=&amp;ldquo;left&amp;rdquo;&amp;gt;Left&amp;lt;/div&amp;gt;&lt;br /&gt;        &amp;lt;div id=&amp;ldquo;center&amp;rdquo;&amp;gt;Center&amp;lt;/div&amp;gt;&lt;br /&gt;        &amp;lt;div id=&amp;ldquo;right&amp;rdquo;&amp;gt;Right&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;container2&amp;rdquo;&amp;gt;&lt;br /&gt;        &amp;lt;div id=&amp;ldquo;left2&amp;rdquo;&amp;gt;Left&amp;lt;/div&amp;gt;&lt;br /&gt;        &amp;lt;div id=&amp;ldquo;center2&amp;rdquo;&amp;gt;Center&amp;lt;/div&amp;gt;&lt;br /&gt;        &amp;lt;div id=&amp;ldquo;right2&amp;rdquo;&amp;gt;Right&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;If you want to right-align a number of elements (for example, buttons at the bottom of a dialog), there are two approaches. One is to set &lt;code&gt;float: right&lt;/code&gt; on each individual item (see the yellow panel above) - you&amp;rsquo;ll notice that this means the divs are displayed in reverse order, because they&amp;rsquo;re set to float to the right of each other. A better approach is to put the divs you want right-aligned into a container div and float that to the right (see the green panel). This ensures the correct ordering of the items.&lt;br /&gt;&lt;br /&gt;&lt;h4&gt;2.3 Floating Behaviour to be Aware Of: float left next to float right (cross browser)&lt;/h4&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/_7adQd_YVgmQ/TTWWrN6MenI/AAAAAAAAH7w/5FCQisV-Lyo/s1600/Screen+shot+2011-01-18+at+13.33.15.png&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/_7adQd_YVgmQ/TTWWrN6MenI/AAAAAAAAH7w/5FCQisV-Lyo/s1600/Screen+shot+2011-01-18+at+13.33.15.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Float right next to float left&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        #left {&lt;br /&gt;            background-color: blue;&lt;br /&gt;            width: 50%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #center {&lt;br /&gt;            background-color: yellow;&lt;br /&gt;            width: 50%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #right {&lt;br /&gt;            background-color: red;&lt;br /&gt;            width: 50%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #next-line {&lt;br /&gt;            background-color: green;&lt;br /&gt;            width: 50%;&lt;br /&gt;            clear: left;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #float-left {&lt;br /&gt;            clear: left;&lt;br /&gt;            background-color: purple;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #float-right {&lt;br /&gt;            background-color: cyan;&lt;br /&gt;            float: right;&lt;br /&gt;        }&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;left&amp;rdquo;&amp;gt;Left&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;center&amp;rdquo;&amp;gt;Center&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;right&amp;rdquo;&amp;gt;Right&amp;lt;/div&amp;gt;&lt;br /&gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;next-line&amp;rdquo;&amp;gt;Next Line&amp;lt;/div&amp;gt;&lt;br /&gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;float-left&amp;rdquo;&amp;gt;Floating Left&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;float-right&amp;rdquo;&amp;gt;Floating Right&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;br /&gt;In Firefox and Chrome (tested under Ubuntu and OS X), if you clear the float on a single div element, that div and all the ones after it will appear underneath all the previous ones. &amp;nbsp;For example, see the &amp;ldquo;Floating left&amp;rdquo; (purple) and &amp;ldquo;Floating right&amp;rdquo; (cyan) divs above. &amp;nbsp;The two divs appear on the same line, floating side-by-side.&lt;br /&gt;&lt;br /&gt;This may even be the same behaviour in IE in strict mode (I don&amp;rsquo;t remember if I tested it). &amp;nbsp;But by default, Internet Explorer renders this quite differently.&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/_7adQd_YVgmQ/TTWZ428ju9I/AAAAAAAAH70/LmBX2Gw9mAA/s1600/floating-left-and-right-in-ie.png&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;442&#34; src=&#34;http://2.bp.blogspot.com/_7adQd_YVgmQ/TTWZ428ju9I/AAAAAAAAH70/LmBX2Gw9mAA/s640/floating-left-and-right-in-ie.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;(Apologies for some of the inconsistency in screenshots - given my choices of operating systems, getting the cursed screenshots in IE was&amp;hellip; challenging).&lt;br /&gt;&lt;br /&gt;The point is that in IE the &lt;code&gt;float: right&lt;/code&gt;&amp;nbsp;is quite literal - it floats to the right directly underneath the last floated element, regardless of any prior &lt;code&gt;clear&lt;/code&gt; commands.&lt;br /&gt;&lt;br /&gt;If you want to get the same behaviour across all browsers, you need to be stricter with adding containers for different content areas:&lt;br /&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Float right next to float left - correct&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        #left {&lt;br /&gt;            background-color: blue;&lt;br /&gt;            width: 50%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #center {&lt;br /&gt;            background-color: yellow;&lt;br /&gt;            width: 50%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #right {&lt;br /&gt;            background-color: red;&lt;br /&gt;            width: 50%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #next-line {&lt;br /&gt;            background-color: green;&lt;br /&gt;            width: 50%;&lt;br /&gt;            clear: left;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #float-left {&lt;br /&gt;            background-color: purple;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #float-right {&lt;br /&gt;            background-color: cyan;&lt;br /&gt;            float: right;&lt;br /&gt;        }&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;left&amp;rdquo;&amp;gt;Left&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;center&amp;rdquo;&amp;gt;Center&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;right&amp;rdquo;&amp;gt;Right&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;next-line&amp;rdquo;&amp;gt;Next Line&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;div style=&amp;ldquo;clear: both&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;float-left&amp;rdquo;&amp;gt;Floating Left&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;float-right&amp;rdquo;&amp;gt;Floating Right&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;br /&gt;&lt;h4&gt;2.4 Floating Behaviour to be Aware Of: parent divs of floated elements do not resize to child&lt;/h4&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/_7adQd_YVgmQ/TTWhG9sPQdI/AAAAAAAAH74/yLmOsJKFsdU/s1600/Screen+shot+2011-01-18+at+14.17.37.png&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/_7adQd_YVgmQ/TTWhG9sPQdI/AAAAAAAAH74/yLmOsJKFsdU/s1600/Screen+shot+2011-01-18+at+14.17.37.png&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;http://2.bp.blogspot.com/_7adQd_YVgmQ/TTWhG9sPQdI/AAAAAAAAH74/yLmOsJKFsdU/s1600/Screen+shot+2011-01-18+at+14.17.37.png&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;br /&gt;&lt;/a&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Floats in containers&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        #left {&lt;br /&gt;            border: 1px solid blue;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #right {&lt;br /&gt;            border: 1px solid red;&lt;br /&gt;            float: right;&lt;br /&gt;        }&lt;br /&gt;        #container {&lt;br /&gt;            border: 1px solid black;&lt;br /&gt;        }&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;left&amp;rdquo;&amp;gt;Left&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;right&amp;rdquo;&amp;gt;Right&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;In the code above, we have a &amp;ldquo;parent&amp;rdquo; div, &lt;code&gt;container&lt;/code&gt;, with two children, &lt;code&gt;left&lt;/code&gt; and &lt;code&gt;right&lt;/code&gt;. &amp;nbsp;Both of these children are floating, it doesn&amp;rsquo;t actually matter that one&amp;rsquo;s left and one&amp;rsquo;s right. &amp;nbsp;What you might not be able to see clearly is that the parent, &lt;code&gt;container&lt;/code&gt;, has zero height. &amp;nbsp;It&amp;rsquo;s got a black border, you should be able to see that the top and bottom of the border are actually next to each other, showing the div has no height of its own.&lt;br /&gt;&lt;br /&gt;However the children have a height, the height shrinks to fit the content, the text.&lt;br /&gt;&lt;br /&gt;What I&amp;rsquo;m trying to get at is that if you want to place something underneath the left and right divs, you can&amp;rsquo;t rely on the browser working out where the bottom is and placing other divs underneath them:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://1.bp.blogspot.com/_7adQd_YVgmQ/TTWj1ojxVqI/AAAAAAAAH78/emZCrAAWor4/s1600/Screen+shot+2011-01-18+at+14.29.24.png&#34; imageanchor=&#34;1&#34; style=&#34;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/_7adQd_YVgmQ/TTWj1ojxVqI/AAAAAAAAH78/emZCrAAWor4/s1600/Screen+shot+2011-01-18+at+14.29.24.png&#34; /&gt;&lt;br /&gt;&lt;/a&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Floats in containers&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        #left {&lt;br /&gt;            border: 1px solid blue;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #right {&lt;br /&gt;            border: 1px solid red;&lt;br /&gt;            float: right;&lt;br /&gt;        }&lt;br /&gt;        #container {&lt;br /&gt;            border: 1px solid black;&lt;br /&gt;        }&lt;br /&gt;        #container2 {&lt;br /&gt;            border: 1px solid yellow;&lt;br /&gt;        }&lt;br /&gt;        #left2 {&lt;br /&gt;            background-color: green;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #right2 {&lt;br /&gt;            background-color: purple;&lt;br /&gt;            float: right;&lt;br /&gt;        }&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;left&amp;rdquo;&amp;gt;Left&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;right&amp;rdquo;&amp;gt;Right&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container2&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;left2&amp;rdquo;&amp;gt;Left&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;right2&amp;rdquo;&amp;gt;Right&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;(You&amp;rsquo;ll note this is not an article about design!  I&amp;rsquo;m trying to use a combination of colours, outlines etc to make the point clear, not to make it look good)&lt;br /&gt;&lt;br /&gt;Basically the floated divs are effectively absolutely positioned, and therefore take up no space on the document (more on this in a later post).&lt;br /&gt;&lt;br /&gt;The way I&amp;rsquo;ve got round this in the past is to set a specific height on the parent div to force any following elements to appear underneath it.  This works, but it can be fragile.  In particular, it doesn&amp;rsquo;t allow for wrapping text (more on this later too).&lt;br /&gt;&lt;br /&gt;&lt;i&gt;Still to come:&lt;/i&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Position and Display: relative, absolute, block, inline&amp;hellip; what does it really mean?&lt;/li&gt;&lt;li&gt;Horizontal and Vertical&amp;nbsp;Centring&lt;/li&gt;&lt;li&gt;Strict Mode Is Your Friend&lt;/li&gt;&lt;li&gt;Column layout using CSS&lt;/li&gt;&lt;li&gt;Why &amp;ldquo;width: 100%&amp;rdquo; might go off the edge of the page&lt;/li&gt;&lt;li&gt;Cross-browser table border behaviour&lt;/li&gt;&lt;/ul&gt;&lt;div style=&#34;margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;&#34;&gt;&lt;i&gt;Previously:&lt;/i&gt;&lt;/div&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;&lt;span class=&#34;Apple-style-span&#34; style=&#34;font-style: normal;&#34;&gt;&lt;a href=&#34;http://mechanitis.blogspot.com/2011/01/css-for-developers-horizontal-layout.html&#34;&gt;Horizontal Layout using CSS&lt;/a&gt;&lt;/span&gt;&lt;/i&gt;&lt;/li&gt;&lt;/ul&gt;&lt;ul&gt;&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CSS for Developers: Horizontal Layout Using CSS</title>
      <link>http://trishagee.github.io/post/css_for_developers_horizontal_layout_using_css</link>
      <pubDate>Mon, 17 Jan 2011 00:00:00 UTC</pubDate>
      <author>Trisha Gee</author>
      <guid>http://trishagee.github.io/post/css_for_developers_horizontal_layout_using_css</guid>
      <description>&lt;p&gt;I&amp;rsquo;m a Java Developer. &amp;nbsp;But I&amp;rsquo;m also a Web Developer. &amp;nbsp;Web Developers have been so badly maligned over the last decade or so that I always feel wary (and sometimes slightly ashamed) admitting this. &amp;nbsp;There&amp;rsquo;s some sort of assumption that Web Developers (and Front End Developers) aren&amp;rsquo;t real programmers. Similarly, &amp;ldquo;real&amp;rdquo; developers don&amp;rsquo;t like to be tainted by coming into contact with that nasty &amp;ldquo;front end stuff&amp;rdquo; in case someone mistakes them for a designer.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Trust me, no-one is going to mistake a Java Developer for a designer. &amp;nbsp;For a start, when designers wear geeky glasses it&amp;rsquo;s ironic. &amp;nbsp;Or chic. &amp;nbsp;Or something.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;But developers will be forced to do something around the front end at some point in their lives. &amp;nbsp;Even if it&amp;rsquo;s because they&amp;rsquo;re sick of manually kicking off some process and want to give the users a big red button to press instead.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;So, as much to compensate for my own goldfish-like brain as anything else, I&amp;rsquo;m going to make a note of some of the CSS stuff I&amp;rsquo;ve used or found helpful during my mad scramblings to get the &lt;a href=&#34;http://www.lmaxtrader.co.uk/&#34;&gt;LMAX Trader&lt;/a&gt; user interface to a) look the way we wanted b) perform fast enough so our &lt;a href=&#34;http://www.infoq.com/presentations/LMAX&#34;&gt;awesome back end performance&lt;/a&gt; wasn&amp;rsquo;t totally invisible to the retail user and c) Not Suck Too Badly in Internet Explorer.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;h3&gt;Part One: Horizontal Layout (or: There&amp;rsquo;s No Excuse For Tables Any More)&lt;/h3&gt;&lt;/div&gt;&lt;div&gt;You may (or may not) have heard that using tables for layout is a Bad Thing. &amp;nbsp;But to be fair, most of us don&amp;rsquo;t care. &amp;nbsp;I&amp;rsquo;ve done it myself, it&amp;rsquo;s usually the quickest way to lay stuff out on the page, especially if you&amp;rsquo;re new to HTML / CSS and/or short on time. &amp;nbsp;There are loads of arguments all over the web as to why this is a bad thing, but the reasons I didn&amp;rsquo;t want tables on the &lt;a href=&#34;http://www.lmaxtrader.co.uk/&#34;&gt;LMAX&lt;/a&gt; UI was a) we saw the performance improve by a really simple replacement of tables with divs and b) given the amount the UI was mutating, divs positioned with CSS was going to allow us a much quicker turnaround for the umpteenth re-design of the UI (ideally the upshot of this would be letting the designers mess with the CSS when they changed their minds and leave us developers out of it).&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Anyway let&amp;rsquo;s assume Tables Are Bad. &amp;nbsp;Tables are only for tabular data, not for layout. &amp;nbsp;In my world.&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;h4&gt;1.1 Simple Horizontal Layout Using Inline&lt;/h4&gt;&lt;/div&gt;&lt;div&gt;The most common use of tables for layout is where you put elements side by side - the default behaviour of divs is that they lay out underneath each other.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;However it&amp;rsquo;s pretty easy to get divs to behave this way too, and using divs has some advantages over using tables.&lt;/div&gt;&lt;div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://2.bp.blogspot.com/_7adQd_YVgmQ/TTQhm7XQHTI/AAAAAAAAH7c/3JE1vQBCbgw/s1600/Screen+shot+2011-01-14+at+17.14.37.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;400&#34; src=&#34;http://2.bp.blogspot.com/_7adQd_YVgmQ/TTQhm7XQHTI/AAAAAAAAH7c/3JE1vQBCbgw/s640/Screen+shot+2011-01-14+at+17.14.37.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Horizontal flow&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        #left {&lt;br /&gt;            background-color: cyan;&lt;br /&gt;            display: inline;&lt;br /&gt;        }&lt;br /&gt;        #center {&lt;br /&gt;            background-color: yellow;&lt;br /&gt;            display: inline;&lt;br /&gt;        }&lt;br /&gt;        #right {&lt;br /&gt;            background-color: red;&lt;br /&gt;            display: inline;&lt;br /&gt;        }&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;left&amp;rdquo;&amp;gt;Left&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;center&amp;rdquo;&amp;gt;Center&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;right&amp;rdquo;&amp;gt;Right&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;The first option is to use &lt;code style=&#34;font-size: 12px;&#34;&gt;display: inline&lt;/code&gt;. &amp;nbsp;This will lay div elements next to each other, similar to a &lt;code style=&#34;font-size: 12px;&#34;&gt;span&lt;/code&gt;. &amp;nbsp;This is the simplest way to get divs to appear side-by-side.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;The disadvantage of this technique, however, is that inline elements can&amp;rsquo;t be sized the same way as standard divs. &amp;nbsp;By default they contract to fit the content.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;The screenshot above is from Chrome on the mac - you&amp;rsquo;ll notice by default the elements have some spacing between them. &amp;nbsp;Reducing the margin/borders on the elements doesn&amp;rsquo;t seem to eliminate this, so that&amp;rsquo;s something else you might need to consider if you use this mechanism to display elements side-by-side.&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: left;&#34;&gt;&lt;/div&gt;&lt;div&gt;&lt;h4&gt;1.2 Simple Horizontal Layout Using Floats&lt;/h4&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/_7adQd_YVgmQ/TTQh06-qxcI/AAAAAAAAH7g/5zKQIsKeEdk/s1600/Screen+shot+2011-01-17+at+10.57.25.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;400&#34; src=&#34;http://4.bp.blogspot.com/_7adQd_YVgmQ/TTQh06-qxcI/AAAAAAAAH7g/5zKQIsKeEdk/s640/Screen+shot+2011-01-17+at+10.57.25.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Horizontal flow&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        #left {&lt;br /&gt;            background-color: cyan;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #center {&lt;br /&gt;            background-color: yellow;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #right {&lt;br /&gt;            background-color: red;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;left&amp;rdquo;&amp;gt;Left&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;center&amp;rdquo;&amp;gt;Center&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;right&amp;rdquo;&amp;gt;Right&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;div&gt;Similar to using inline, floating a div will do the following:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Make it shrink to fit the content&lt;/li&gt;&lt;li&gt;Lay it out side-by-side with any sibling floating divs.&lt;/li&gt;&lt;/ol&gt;You&amp;rsquo;ll want to apply padding, margins, height, width and whatever else to make it appear less rubbish.&lt;br /&gt;&lt;div&gt;&lt;h4&gt;&lt;br class=&#34;Apple-interchange-newline&#34; /&gt;1.3 Wrapping Horizontal Layout&lt;/h4&gt;&lt;/div&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/_7adQd_YVgmQ/TTQkOi9uxMI/AAAAAAAAH7k/FWxavDriCp0/s1600/Screen+shot+2011-01-17+at+11.12.36.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;400&#34; src=&#34;http://3.bp.blogspot.com/_7adQd_YVgmQ/TTQkOi9uxMI/AAAAAAAAH7k/FWxavDriCp0/s640/Screen+shot+2011-01-17+at+11.12.36.png&#34; width=&#34;640&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;&lt;br /&gt;&amp;lt;html&amp;gt;&lt;br /&gt;&amp;lt;head&amp;gt;&lt;br /&gt;    &amp;lt;title&amp;gt;Horizontal flow&amp;lt;/title&amp;gt;&lt;br /&gt;    &amp;lt;style type=&amp;ldquo;text/css&amp;rdquo;&amp;gt;&lt;br /&gt;        #left {&lt;br /&gt;            background-color: cyan;&lt;br /&gt;            width: 50%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #center {&lt;br /&gt;            background-color: yellow;&lt;br /&gt;            width: 50%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;        #right {&lt;br /&gt;            background-color: red;&lt;br /&gt;            width: 50%;&lt;br /&gt;            float: left;&lt;br /&gt;        }&lt;br /&gt;    &amp;lt;/style&amp;gt;&lt;br /&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;lt;body&amp;gt;&lt;br /&gt;&amp;lt;div id=&amp;ldquo;container&amp;rdquo;&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;left&amp;rdquo;&amp;gt;Left&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;center&amp;rdquo;&amp;gt;Center&amp;lt;/div&amp;gt;&lt;br /&gt;    &amp;lt;div id=&amp;ldquo;right&amp;rdquo;&amp;gt;Right&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/div&amp;gt;&lt;br /&gt;&amp;lt;/body&amp;gt;&lt;br /&gt;&amp;lt;/html&amp;gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;/div&gt;The advantage you have using divs over tables is that you can get the browser to work out how the elements should flow. &amp;nbsp;Tables require you to determine exactly how many cells appear on each row, but with divs you can determine a width for each element and have the browser work out whether to show it on a new line or not. &amp;nbsp;This will work with both percentage and pixel widths. &lt;br /&gt;&lt;ul&gt;&lt;li&gt;If you want a more table-like structure where you know exactly how many elements should appear on each line, use a percentage of the screen with. &amp;nbsp;&lt;/li&gt;&lt;li&gt;If you know the width of each element, you should set a pixel width on the elements and have the browser work out how many to show per line.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;The next CSS post will go over floating behaviour in a little more detail.&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
